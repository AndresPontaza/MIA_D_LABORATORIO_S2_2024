{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-transition'), require('d3-timer'), require('d3-interpolate'), require('d3-zoom'), require('viz.js/viz'), require('d3-format'), require('d3-path')) : typeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-transition', 'd3-timer', 'd3-interpolate', 'd3-zoom', 'viz.js/viz', 'd3-format', 'd3-path'], factory) : factory(global['d3-graphviz'] = {}, global.d3, global.d3, global.d3, global.d3, global.d3, global.d3, global.Viz, global.d3, global.d3);\n})(this, function (exports, d3, d3Dispatch, d3Transition, d3Timer, d3Interpolate, d3Zoom, Viz, d3Format, d3Path) {\n  'use strict';\n\n  Viz = Viz && Viz.hasOwnProperty('default') ? Viz['default'] : Viz;\n\n  function extractElementData(element) {\n    var datum = {};\n    var tag = element.node().nodeName;\n    datum.tag = tag;\n\n    if (tag == '#text') {\n      datum.text = element.text();\n    } else if (tag == '#comment') {\n      datum.comment = element.text();\n    }\n\n    datum.attributes = {};\n    var attributes = element.node().attributes;\n\n    if (attributes) {\n      for (var i = 0; i < attributes.length; i++) {\n        var attribute = attributes[i];\n        var name = attribute.name;\n        var value = attribute.value;\n        datum.attributes[name] = value;\n      }\n    }\n\n    var transform = element.node().transform;\n\n    if (transform && transform.baseVal.numberOfItems != 0) {\n      var matrix = transform.baseVal.consolidate().matrix;\n      datum.translation = {\n        x: matrix.e,\n        y: matrix.f\n      };\n      datum.scale = matrix.a;\n    }\n\n    if (tag == 'ellipse') {\n      datum.center = {\n        x: datum.attributes.cx,\n        y: datum.attributes.cy\n      };\n    }\n\n    if (tag == 'polygon') {\n      var points = element.attr('points').split(' ');\n      var x = points.map(function (p) {\n        return p.split(',')[0];\n      });\n      var y = points.map(function (p) {\n        return p.split(',')[1];\n      });\n      var xmin = Math.min.apply(null, x);\n      var xmax = Math.max.apply(null, x);\n      var ymin = Math.min.apply(null, y);\n      var ymax = Math.max.apply(null, y);\n      var bbox = {\n        x: xmin,\n        y: ymin,\n        width: xmax - xmin,\n        height: ymax - ymin\n      };\n      datum.bbox = bbox;\n      datum.center = {\n        x: (xmin + xmax) / 2,\n        y: (ymin + ymax) / 2\n      };\n    }\n\n    if (tag == 'path') {\n      var d = element.attr('d');\n      var points = d.split(/[A-Z ]/);\n      points.shift();\n      var x = points.map(function (p) {\n        return +p.split(',')[0];\n      });\n      var y = points.map(function (p) {\n        return +p.split(',')[1];\n      });\n      var xmin = Math.min.apply(null, x);\n      var xmax = Math.max.apply(null, x);\n      var ymin = Math.min.apply(null, y);\n      var ymax = Math.max.apply(null, y);\n      var bbox = {\n        x: xmin,\n        y: ymin,\n        width: xmax - xmin,\n        height: ymax - ymin\n      };\n      datum.bbox = bbox;\n      datum.center = {\n        x: (xmin + xmax) / 2,\n        y: (ymin + ymax) / 2\n      };\n      datum.totalLength = element.node().getTotalLength();\n    }\n\n    if (tag == 'text') {\n      datum.center = {\n        x: element.attr('x'),\n        y: element.attr('y')\n      };\n    }\n\n    if (tag == '#text') {\n      datum.text = element.text();\n    } else if (tag == '#comment') {\n      datum.comment = element.text();\n    }\n\n    return datum;\n  }\n\n  function extractAllElementsData(element) {\n    var datum = extractElementData(element);\n    datum.children = [];\n    var children = d3.selectAll(element.node().childNodes);\n    children.each(function () {\n      var childData = extractAllElementsData(d3.select(this));\n      childData.parent = datum;\n      datum.children.push(childData);\n    });\n    return datum;\n  }\n\n  function createElement(data) {\n    if (data.tag == '#text') {\n      return document.createTextNode(\"\");\n    } else if (data.tag == '#comment') {\n      return document.createComment(data.comment);\n    } else {\n      return document.createElementNS('http://www.w3.org/2000/svg', data.tag);\n    }\n  }\n\n  function createElementWithAttributes(data) {\n    var elementNode = createElement(data);\n    var element = d3.select(elementNode);\n    var attributes = data.attributes;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = Object.keys(attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var attributeName = _step.value;\n        var attributeValue = attributes[attributeName];\n        element.attr(attributeName, attributeValue);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return elementNode;\n  }\n\n  function replaceElement(element, data) {\n    var parent = d3.select(element.node().parentNode);\n    var newElementNode = createElementWithAttributes(data);\n    var newElement = parent.insert(function () {\n      return newElementNode;\n    }, function () {\n      return element.node();\n    });\n    element.remove();\n    return newElement;\n  }\n\n  function insertElementData(element, datum) {\n    element.datum(datum);\n    element.data([datum], function (d) {\n      return d.key;\n    });\n  }\n\n  function insertAllElementsData(element, datum) {\n    insertElementData(element, datum);\n    var children = d3.selectAll(element.node().childNodes);\n    children.each(function (d, i) {\n      insertAllElementsData(d3.select(this), datum.children[i]);\n    });\n  }\n\n  function insertChildren(element, index) {\n    var children = element.selectAll(function () {\n      return element.node().childNodes;\n    });\n    children = children.data(function (d) {\n      return d.children;\n    }, function (d) {\n      return d.tag + '-' + index;\n    });\n    var childrenEnter = children.enter().append(function (d) {\n      return createElement(d);\n    });\n    var childrenExit = children.exit();\n    childrenExit = childrenExit.remove();\n    children = childrenEnter.merge(children);\n    var childTagIndexes = {};\n    children.each(function (childData) {\n      var childTag = childData.tag;\n\n      if (childTagIndexes[childTag] == null) {\n        childTagIndexes[childTag] = 0;\n      }\n\n      var childIndex = childTagIndexes[childTag]++;\n      attributeElement.call(this, childData, childIndex);\n    });\n  }\n\n  function attributeElement(data) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var element = d3.select(this);\n    var tag = data.tag;\n    var attributes = data.attributes;\n    var currentAttributes = element.node().attributes;\n\n    if (currentAttributes) {\n      for (var i = 0; i < currentAttributes.length; i++) {\n        var currentAttribute = currentAttributes[i];\n        var name = currentAttribute.name;\n\n        if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {\n          var namespaceURIParts = currentAttribute.namespaceURI.split('/');\n          var namespace = namespaceURIParts[namespaceURIParts.length - 1];\n          name = namespace + ':' + name;\n        }\n\n        if (!(name in attributes)) {\n          attributes[name] = null;\n        }\n      }\n    }\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n      for (var _iterator2 = Object.keys(attributes)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n        var attributeName = _step2.value;\n        element.attr(attributeName, attributes[attributeName]);\n      }\n    } catch (err) {\n      _didIteratorError2 = true;\n      _iteratorError2 = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n          _iterator2.return();\n        }\n      } finally {\n        if (_didIteratorError2) {\n          throw _iteratorError2;\n        }\n      }\n    }\n\n    if (data.text) {\n      element.text(data.text);\n    }\n\n    insertChildren(element, index);\n  }\n\n  function shallowCopyObject(obj) {\n    return Object.assign({}, obj);\n  }\n\n  function roundTo4Decimals(x) {\n    return Math.round(x * 10000.0) / 10000.0;\n  }\n\n  var zoom$1 = function (enable) {\n    this._options.zoom = enable;\n\n    if (this._options.zoom && !this._zoomBehavior) {\n      createZoomBehavior.call(this);\n    }\n\n    return this;\n  };\n\n  function createZoomBehavior() {\n    function zoomed() {\n      var g = d3.select(svg.node().querySelector(\"g\"));\n      g.attr('transform', d3.event.transform);\n    }\n\n    var root = this._selection;\n    var svg = d3.select(root.node().querySelector(\"svg\"));\n\n    if (svg.size() == 0) {\n      return this;\n    }\n\n    this._zoomSelection = svg;\n    var zoomBehavior = d3Zoom.zoom().scaleExtent(this._options.zoomScaleExtent).translateExtent(this._options.zoomTranslateExtent).interpolate(d3Interpolate.interpolate).on(\"zoom\", zoomed);\n    this._zoomBehavior = zoomBehavior;\n    var g = d3.select(svg.node().querySelector(\"g\"));\n    svg.call(zoomBehavior);\n\n    if (!this._active) {\n      translateZoomBehaviorTransform.call(this, g);\n    }\n\n    this._originalTransform = d3Zoom.zoomTransform(svg.node());\n    return this;\n  }\n\n  function getTranslatedZoomTransform(selection$$1) {\n    // Get the current zoom transform for the top level svg and\n    // translate it uniformly with the given selection, using the\n    // difference between the translation specified in the selection's\n    // data and it's saved previous translation. The selection is\n    // normally the top level g element of the graph.\n    var oldTranslation = this._translation;\n    var oldScale = this._scale;\n    var newTranslation = selection$$1.datum().translation;\n    var newScale = selection$$1.datum().scale;\n    var t = d3Zoom.zoomTransform(this._zoomSelection.node());\n\n    if (oldTranslation) {\n      t = t.scale(1 / oldScale);\n      t = t.translate(-oldTranslation.x, -oldTranslation.y);\n    }\n\n    t = t.translate(newTranslation.x, newTranslation.y);\n    t = t.scale(newScale);\n    return t;\n  }\n\n  function translateZoomBehaviorTransform(selection$$1) {\n    // Translate the current zoom transform for the top level svg\n    // uniformly with the given selection, using the difference\n    // between the translation specified in the selection's data and\n    // it's saved previous translation. The selection is normally the\n    // top level g element of the graph.\n    this._zoomBehavior.transform(this._zoomSelection, getTranslatedZoomTransform.call(this, selection$$1)); // Save the selections's new translation and scale.\n\n\n    this._translation = selection$$1.datum().translation;\n    this._scale = selection$$1.datum().scale; // Set the original zoom transform to the translation and scale specified in\n    // the selection's data.\n\n    this._originalTransform = d3Zoom.zoomIdentity.translate(selection$$1.datum().translation.x, selection$$1.datum().translation.y).scale(selection$$1.datum().scale);\n  }\n\n  function resetZoom(transition$$1) {\n    // Reset the zoom transform to the original zoom transform.\n    var selection$$1 = this._zoomSelection;\n\n    if (transition$$1) {\n      selection$$1 = selection$$1.transition(transition$$1);\n    }\n\n    selection$$1.call(this._zoomBehavior.transform, this._originalTransform);\n    return this;\n  }\n\n  function zoomScaleExtent(extent) {\n    this._options.zoomScaleExtent = extent;\n    return this;\n  }\n\n  function zoomTranslateExtent(extent) {\n    this._options.zoomTranslateExtent = extent;\n    return this;\n  }\n\n  function zoomBehavior() {\n    return this._zoomBehavior || null;\n  }\n\n  function zoomSelection() {\n    return this._zoomSelection || null;\n  }\n\n  function pathTween(points, d1) {\n    return function () {\n      var pointInterpolators = points.map(function (p) {\n        return d3Interpolate.interpolate([p[0][0], p[0][1]], [p[1][0], p[1][1]]);\n      });\n      return function (t) {\n        return t < 1 ? \"M\" + pointInterpolators.map(function (p) {\n          return p(t);\n        }).join(\"L\") : d1;\n      };\n    };\n  }\n\n  function pathTweenPoints(node, d1, precision, precisionIsRelative) {\n    var path0 = node;\n    var path1 = path0.cloneNode();\n    var n0 = path0.getTotalLength();\n    var n1 = (path1.setAttribute(\"d\", d1), path1).getTotalLength(); // Uniform sampling of distance based on specified precision.\n\n    var distances = [0];\n    var i = 0;\n    var dt = precisionIsRelative ? precision : precision / Math.max(n0, n1);\n\n    while ((i += dt) < 1) {\n      distances.push(i);\n    }\n\n    distances.push(1); // Compute point-interpolators at each distance.\n\n    var points = distances.map(function (t) {\n      var p0 = path0.getPointAtLength(t * n0);\n      var p1 = path1.getPointAtLength(t * n1);\n      return [[p0.x, p0.y], [p1.x, p1.y]];\n    });\n    return points;\n  }\n\n  var data = function () {\n    return this._data || null;\n  };\n\n  function isEdgeElementParent(datum) {\n    return datum.attributes.class == 'edge' || datum.tag == 'a' && datum.parent.tag == 'g' && datum.parent.parent.attributes.class == 'edge';\n  }\n\n  function isEdgeElement(datum) {\n    return datum.parent && isEdgeElementParent(datum.parent);\n  }\n\n  function getEdgeGroup(datum) {\n    if (datum.parent.attributes.class == 'edge') {\n      return datum.parent;\n    } else {\n      // datum.parent.tag == 'g' && datum.parent.parent.tag == 'g' && datum.parent.parent.parent.attributes.class == 'edge'\n      return datum.parent.parent.parent;\n    }\n  }\n\n  function getEdgeTitle(datum) {\n    return getEdgeGroup(datum).children.find(function (e) {\n      return e.tag == 'title';\n    });\n  }\n\n  var render = function (callback) {\n    if (this._busy) {\n      this._queue.push(this.render.bind(this, callback));\n\n      return this;\n    }\n\n    this._dispatch.call('renderStart', this);\n\n    if (this._transitionFactory) {\n      d3Timer.timeout(function () {\n        // Decouple from time spent. See https://github.com/d3/d3-timer/issues/27\n        this._transition = d3Transition.transition(this._transitionFactory());\n\n        _render.call(this, callback);\n      }.bind(this), 0);\n    } else {\n      _render.call(this, callback);\n    }\n\n    return this;\n  };\n\n  function _render(callback) {\n    var transitionInstance = this._transition;\n    var fade = this._options.fade && transitionInstance != null;\n    var tweenPaths = this._options.tweenPaths;\n    var tweenShapes = this._options.tweenShapes;\n    var convertEqualSidedPolygons = this._options.convertEqualSidedPolygons;\n    var growEnteringEdges = this._options.growEnteringEdges && transitionInstance != null;\n    var attributer = this._attributer;\n    var graphvizInstance = this;\n\n    function insertChildren(element) {\n      var children = element.selectAll(function () {\n        return element.node().childNodes;\n      });\n      children = children.data(function (d) {\n        return d.children;\n      }, function (d) {\n        return d.key;\n      });\n      var childrenEnter = children.enter().append(function (d) {\n        var element = createElement(d);\n\n        if (d.tag == '#text' && fade) {\n          element.nodeValue = d.text;\n        }\n\n        return element;\n      });\n\n      if (fade || growEnteringEdges && isEdgeElementParent(element.datum())) {\n        var childElementsEnter = childrenEnter.filter(function (d) {\n          return d.tag[0] == '#' ? null : this;\n        }).each(function (d) {\n          var childEnter = d3.select(this);\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = Object.keys(d.attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var attributeName = _step.value;\n              var attributeValue = d.attributes[attributeName];\n              childEnter.attr(attributeName, attributeValue);\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n        });\n        childElementsEnter.filter(function (d) {\n          return d.tag == 'svg' || d.tag == 'g' ? null : this;\n        }).style(\"opacity\", 0.0);\n      }\n\n      var childrenExit = children.exit();\n\n      if (attributer) {\n        childrenExit.each(attributer);\n      }\n\n      if (transitionInstance) {\n        childrenExit = childrenExit.transition(transitionInstance);\n\n        if (fade) {\n          childrenExit.filter(function (d) {\n            return d.tag[0] == '#' ? null : this;\n          }).style(\"opacity\", 0.0);\n        }\n      }\n\n      childrenExit = childrenExit.remove();\n      children = childrenEnter.merge(children);\n      children.each(attributeElement$$1);\n    }\n\n    function attributeElement$$1(data$$1) {\n      var element = d3.select(this);\n\n      if (data$$1.tag == \"svg\") {\n        var options = graphvizInstance._options;\n\n        if (options.width != null || options.height != null) {\n          var width = options.width;\n          var height = options.height;\n\n          if (width == null) {\n            width = data$$1.attributes.width.replace('pt', '') * 4 / 3;\n          } else {\n            element.attr(\"width\", width);\n            data$$1.attributes.width = width;\n          }\n\n          if (height == null) {\n            height = data$$1.attributes.height.replace('pt', '') * 4 / 3;\n          } else {\n            element.attr(\"height\", height);\n            data$$1.attributes.height = height;\n          }\n\n          if (!options.fit) {\n            element.attr(\"viewBox\", \"0 0 \" + width * 3 / 4 / options.scale + \" \" + height * 3 / 4 / options.scale);\n            data$$1.attributes.viewBox = \"0 0 \" + width * 3 / 4 / options.scale + \" \" + height * 3 / 4 / options.scale;\n          }\n        }\n\n        if (options.scale != 1 && (options.fit || options.width == null && options.height == null)) {\n          width = data$$1.attributes.viewBox.split(' ')[2];\n          height = data$$1.attributes.viewBox.split(' ')[3];\n          element.attr(\"viewBox\", \"0 0 \" + width / options.scale + \" \" + height / options.scale);\n          data$$1.attributes.viewBox = \"0 0 \" + width / options.scale + \" \" + height / options.scale;\n        }\n      }\n\n      if (attributer) {\n        element.each(attributer);\n      }\n\n      var tag = data$$1.tag;\n      var attributes = data$$1.attributes;\n      var currentAttributes = element.node().attributes;\n\n      if (currentAttributes) {\n        for (var i = 0; i < currentAttributes.length; i++) {\n          var currentAttribute = currentAttributes[i];\n          var name = currentAttribute.name;\n\n          if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {\n            var namespaceURIParts = currentAttribute.namespaceURI.split('/');\n            var namespace = namespaceURIParts[namespaceURIParts.length - 1];\n            name = namespace + ':' + name;\n          }\n\n          if (!(name in attributes)) {\n            attributes[name] = null;\n          }\n        }\n      }\n\n      var convertShape = false;\n      var convertPrevShape = false;\n\n      if (tweenShapes && transitionInstance) {\n        if ((this.nodeName == 'polygon' || this.nodeName == 'ellipse') && data$$1.alternativeOld) {\n          convertPrevShape = true;\n        }\n\n        if ((tag == 'polygon' || tag == 'ellipse') && data$$1.alternativeNew) {\n          convertShape = true;\n        }\n\n        if (this.nodeName == 'polygon' && tag == 'polygon') {\n          var prevData = extractElementData(element);\n          var prevPoints = prevData.attributes.points;\n\n          if (!convertEqualSidedPolygons) {\n            var nPrevPoints = prevPoints.split(' ').length;\n            var points = data$$1.attributes.points;\n            var nPoints = points.split(' ').length;\n\n            if (nPoints == nPrevPoints) {\n              convertShape = false;\n              convertPrevShape = false;\n            }\n          }\n        }\n\n        if (convertPrevShape) {\n          var prevPathData = data$$1.alternativeOld;\n          var pathElement = replaceElement(element, prevPathData);\n          pathElement.data([data$$1], function () {\n            return data$$1.key;\n          });\n          element = pathElement;\n        }\n\n        if (convertShape) {\n          var newPathData = data$$1.alternativeNew;\n          tag = 'path';\n          attributes = newPathData.attributes;\n        }\n      }\n\n      var elementTransition = element;\n\n      if (transitionInstance) {\n        elementTransition = elementTransition.transition(transitionInstance);\n\n        if (fade) {\n          elementTransition.filter(function (d) {\n            return d.tag[0] == '#' ? null : this;\n          }).style(\"opacity\", 1.0);\n        }\n\n        elementTransition.filter(function (d) {\n          return d.tag[0] == '#' ? null : this;\n        }).on(\"end\", function () {\n          d3.select(this).attr('style', null);\n        });\n      }\n\n      var growThisPath = growEnteringEdges && tag == 'path' && data$$1.offset;\n\n      if (growThisPath) {\n        var totalLength = data$$1.totalLength;\n        element.attr(\"stroke-dasharray\", totalLength + \" \" + totalLength).attr(\"stroke-dashoffset\", totalLength).attr('transform', 'translate(' + data$$1.offset.x + ',' + data$$1.offset.y + ')');\n        attributes[\"stroke-dashoffset\"] = 0;\n        attributes['transform'] = 'translate(0,0)';\n        elementTransition.attr(\"stroke-dashoffset\", attributes[\"stroke-dashoffset\"]).attr('transform', attributes['transform']).on(\"start\", function () {\n          d3.select(this).style('opacity', null);\n        }).on(\"end\", function () {\n          d3.select(this).attr('stroke-dashoffset', null).attr('stroke-dasharray', null).attr('transform', null);\n        });\n      }\n\n      var moveThisPolygon = growEnteringEdges && tag == 'polygon' && isEdgeElement(data$$1) && data$$1.offset;\n\n      if (moveThisPolygon) {\n        var edgePath = d3.select(element.node().parentNode.querySelector(\"path\"));\n        var p0 = edgePath.node().getPointAtLength(0);\n        var p1 = edgePath.node().getPointAtLength(data$$1.totalLength);\n        var p2 = edgePath.node().getPointAtLength(data$$1.totalLength - 1);\n        var angle1 = Math.atan2(p1.y - p2.y, p1.x - p2.x) * 180 / Math.PI;\n        var x = p0.x - p1.x + data$$1.offset.x;\n        var y = p0.y - p1.y + data$$1.offset.y;\n        element.attr('transform', 'translate(' + x + ',' + y + ')');\n        elementTransition.attrTween(\"transform\", function () {\n          return function (t) {\n            var p = edgePath.node().getPointAtLength(data$$1.totalLength * t);\n            var p2 = edgePath.node().getPointAtLength(data$$1.totalLength * t + 1);\n            var angle = Math.atan2(p2.y - p.y, p2.x - p.x) * 180 / Math.PI - angle1;\n            x = p.x - p1.x + data$$1.offset.x * (1 - t);\n            y = p.y - p1.y + data$$1.offset.y * (1 - t);\n            return 'translate(' + x + ',' + y + ') rotate(' + angle + ' ' + p1.x + ' ' + p1.y + ')';\n          };\n        }).on(\"start\", function () {\n          d3.select(this).style('opacity', null);\n        }).on(\"end\", function () {\n          d3.select(this).attr('transform', null);\n        });\n      }\n\n      var tweenThisPath = tweenPaths && transitionInstance && tag == 'path' && element.attr('d') != null;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = Object.keys(attributes)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var attributeName = _step2.value;\n          var attributeValue = attributes[attributeName];\n\n          if (tweenThisPath && attributeName == 'd') {\n            var points = (data$$1.alternativeOld || data$$1).points;\n\n            if (points) {\n              elementTransition.attrTween(\"d\", pathTween(points, attributeValue));\n            }\n          } else {\n            if (attributeName == 'transform' && data$$1.translation) {\n              if (transitionInstance) {\n                var onEnd = elementTransition.on(\"end\");\n                elementTransition.on(\"start\", function () {\n                  if (graphvizInstance._zoomBehavior) {\n                    // Update the transform to transition to, just before the transition starts\n                    // in order to catch changes between the transition scheduling to its start.\n                    elementTransition.tween(\"attr.transform\", function () {\n                      var node = this;\n                      return function (t) {\n                        node.setAttribute(\"transform\", d3Interpolate.interpolateTransformSvg(d3Zoom.zoomTransform(graphvizInstance._zoomSelection.node()).toString(), getTranslatedZoomTransform.call(graphvizInstance, element).toString())(t));\n                      };\n                    });\n                  }\n                }).on(\"end\", function () {\n                  onEnd.call(this); // Update the zoom transform to the new translated transform\n\n                  if (graphvizInstance._zoomBehavior) {\n                    translateZoomBehaviorTransform.call(graphvizInstance, element);\n                  }\n                });\n              } else {\n                if (graphvizInstance._zoomBehavior) {\n                  // Update the transform attribute to set with the current pan translation\n                  attributeValue = getTranslatedZoomTransform.call(graphvizInstance, element).toString();\n                }\n              }\n            }\n\n            elementTransition.attr(attributeName, attributeValue);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (convertShape) {\n        elementTransition.on(\"end\", function (d, i, nodes) {\n          pathElement = d3.select(this);\n          var newElement = replaceElement(pathElement, d);\n          newElement.data([d], function () {\n            return d.key;\n          });\n        });\n      }\n\n      if (data$$1.text) {\n        elementTransition.text(data$$1.text);\n      }\n\n      insertChildren(element);\n    }\n\n    var root = this._selection;\n\n    if (transitionInstance != null) {\n      // Ensure original SVG shape elements are restored after transition before rendering new graph\n      var jobs = this._jobs;\n\n      if (graphvizInstance._active) {\n        jobs.push(null);\n        return this;\n      } else {\n        root.transition(transitionInstance).transition().duration(0).on(\"end\", function () {\n          graphvizInstance._active = false;\n\n          if (jobs.length != 0) {\n            jobs.shift();\n            graphvizInstance.render();\n          }\n        });\n        this._active = true;\n      }\n    }\n\n    if (transitionInstance != null) {\n      root.transition(transitionInstance).on(\"start\", function () {\n        graphvizInstance._dispatch.call('transitionStart', graphvizInstance);\n      }).on(\"end\", function () {\n        graphvizInstance._dispatch.call('transitionEnd', graphvizInstance);\n      }).transition().duration(0).on(\"start\", function () {\n        graphvizInstance._dispatch.call('restoreEnd', graphvizInstance);\n\n        graphvizInstance._dispatch.call('end', graphvizInstance);\n\n        if (callback) {\n          callback.call(graphvizInstance);\n        }\n      });\n    }\n\n    var data$$1 = this._data;\n    var svg = root.selectAll(\"svg\").data([data$$1], function (d) {\n      return d.key;\n    });\n    svg = svg.enter().append(\"svg\").merge(svg);\n    attributeElement$$1.call(svg.node(), data$$1);\n\n    if (this._options.zoom && !this._zoomBehavior) {\n      createZoomBehavior.call(this);\n    }\n\n    graphvizInstance._dispatch.call('renderEnd', graphvizInstance);\n\n    if (transitionInstance == null) {\n      this._dispatch.call('end', this);\n\n      if (callback) {\n        callback.call(this);\n      }\n    }\n\n    return this;\n  }\n\n  function convertToPathData(originalData, guideData) {\n    if (originalData.tag == 'polygon') {\n      var newData = shallowCopyObject(originalData);\n      newData.tag = 'path';\n      var originalAttributes = originalData.attributes;\n      var newAttributes = shallowCopyObject(originalAttributes);\n      var newPointsString = originalAttributes.points;\n\n      if (guideData.tag == 'polygon') {\n        var bbox = originalData.bbox;\n        bbox.cx = bbox.x + bbox.width / 2;\n        bbox.cy = bbox.y + bbox.height / 2;\n        var pointsString = originalAttributes.points;\n        var pointStrings = pointsString.split(' ');\n        var normPoints = pointStrings.map(function (p) {\n          var xy = p.split(',');\n          return [xy[0] - bbox.cx, xy[1] - bbox.cy];\n        });\n        var x0 = normPoints[normPoints.length - 1][0];\n        var y0 = normPoints[normPoints.length - 1][1];\n\n        for (var i = 0; i < normPoints.length; i++, x0 = x1, y0 = y1) {\n          var x1 = normPoints[i][0];\n          var y1 = normPoints[i][1];\n          var dx = x1 - x0;\n          var dy = y1 - y0;\n\n          if (dy == 0) {\n            continue;\n          } else {\n            var x2 = x0 - y0 * dx / dy;\n          }\n\n          if (0 <= x2 && x2 < Infinity && (x0 <= x2 && x2 <= x1 || x1 <= x2 && x2 <= x0)) {\n            break;\n          }\n        }\n\n        var newPointStrings = [[bbox.cx + x2, bbox.cy + 0].join(',')];\n        newPointStrings = newPointStrings.concat(pointStrings.slice(i));\n        newPointStrings = newPointStrings.concat(pointStrings.slice(0, i));\n        newPointsString = newPointStrings.join(' ');\n      }\n\n      newAttributes['d'] = 'M' + newPointsString + 'z';\n      delete newAttributes.points;\n      newData.attributes = newAttributes;\n    } else\n      /* if (originalData.tag == 'ellipse') */\n      {\n        var newData = shallowCopyObject(originalData);\n        newData.tag = 'path';\n        var originalAttributes = originalData.attributes;\n        var newAttributes = shallowCopyObject(originalAttributes);\n        var cx = originalAttributes.cx;\n        var cy = originalAttributes.cy;\n        var rx = originalAttributes.rx;\n        var ry = originalAttributes.ry;\n\n        if (guideData.tag == 'polygon') {\n          var bbox = guideData.bbox;\n          bbox.cx = bbox.x + bbox.width / 2;\n          bbox.cy = bbox.y + bbox.height / 2;\n          var p = guideData.attributes.points.split(' ')[0].split(',');\n          var sx = p[0];\n          var sy = p[1];\n          var dx = sx - bbox.cx;\n          var dy = sy - bbox.cy;\n          var l = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n          var cosA = dx / l;\n          var sinA = -dy / l;\n        } else {\n          // if (guideData.tag == 'path') {\n          // FIXME: add support for getting start position from path\n          var cosA = 1;\n          var sinA = 0;\n        }\n\n        var x1 = rx * cosA;\n        var y1 = -ry * sinA;\n        var x2 = rx * -cosA;\n        var y2 = -ry * -sinA;\n        var dx = x2 - x1;\n        var dy = y2 - y1;\n        newAttributes['d'] = 'M ' + cx + ' ' + cy + ' m ' + x1 + ',' + y1 + ' a ' + rx + ',' + ry + ' 0 1,0 ' + dx + ',' + dy + ' a ' + rx + ',' + ry + ' 0 1,0 ' + -dx + ',' + -dy + 'z';\n        delete newAttributes.cx;\n        delete newAttributes.cy;\n        delete newAttributes.rx;\n        delete newAttributes.ry;\n        newData.attributes = newAttributes;\n      }\n\n    return newData;\n  }\n\n  function translatePointsAttribute(pointsString, x, y) {\n    var pointStrings = pointsString.split(' ');\n    var points = pointStrings.map(function (p) {\n      return p.split(',');\n    });\n    var points = pointStrings.map(function (p) {\n      return [roundTo4Decimals(+x + +p.split(',')[0]), roundTo4Decimals(+y + +p.split(',')[1])];\n    });\n    var pointStrings = points.map(function (p) {\n      return p.join(',');\n    });\n    var pointsString = pointStrings.join(' ');\n    pointsString = pointsString.replace(/-0\\./g, '-.').replace(/ 0\\./g, ' .');\n    return pointsString;\n  }\n\n  function translateDAttribute(d, x, y) {\n    var pointStrings = d.split(/[A-Z ]/);\n    pointStrings.shift();\n    var commands = d.split(/[^[A-Z ]+/);\n    var points = pointStrings.map(function (p) {\n      return p.split(',');\n    });\n    var points = pointStrings.map(function (p) {\n      return [roundTo4Decimals(+x + +p.split(',')[0]), roundTo4Decimals(+y + +p.split(',')[1])];\n    });\n    var pointStrings = points.map(function (p) {\n      return p.join(',');\n    });\n    d = commands.reduce(function (arr, v, i) {\n      return arr.concat(v, pointStrings[i]);\n    }, []).join('');\n    d = d.replace(/-0\\./g, '-.').replace(/ 0\\./g, ' .');\n    return d;\n  }\n\n  function initViz() {\n    // force JIT compilation of Viz.js\n    if (this._worker == null) {\n      Viz(\"\");\n\n      this._dispatch.call(\"initEnd\", this);\n    } else {\n      var vizURL = this._vizURL;\n      var graphvizInstance = this;\n\n      this._worker.onmessage = function (event$$1) {\n        graphvizInstance._dispatch.call(\"initEnd\", this);\n      };\n\n      if (!vizURL.match(/^https?:\\/\\/|^\\/\\//i)) {\n        // Local URL. Prepend with local domain to be usable in web worker\n        vizURL = new window.URL(vizURL, document.location.href).href;\n      }\n\n      this._worker.postMessage({\n        dot: \"\",\n        vizURL: vizURL\n      });\n    }\n  }\n\n  var dot = function (src, callback) {\n    var graphvizInstance = this;\n    var worker = this._worker;\n    var engine = this._options.engine;\n    var images = this._images;\n    var totalMemory = this._options.totalMemory;\n    var keyMode = this._options.keyMode;\n    var tweenPaths = this._options.tweenPaths;\n    var tweenShapes = this._options.tweenShapes;\n\n    if (typeof this._options.tweenPrecision == 'string' && this._options.tweenPrecision.includes('%')) {\n      var tweenPrecision = +this._options.tweenPrecision.split('%')[0] / 100;\n\n      var tweenPrecisionIsRelative = this._options.tweenPrecision.includes('%');\n    } else {\n      var tweenPrecision = this._options.tweenPrecision;\n      var tweenPrecisionIsRelative = false;\n    }\n\n    var growEnteringEdges = this._options.growEnteringEdges;\n    var dictionary = {};\n    var prevDictionary = this._dictionary || {};\n    var nodeDictionary = {};\n    var prevNodeDictionary = this._nodeDictionary || {};\n\n    function setKey(datum, index) {\n      var tag = datum.tag;\n\n      if (keyMode == 'index') {\n        datum.key = index;\n      } else if (tag[0] != '#') {\n        if (keyMode == 'id') {\n          datum.key = datum.attributes.id;\n        } else if (keyMode == 'title') {\n          var title = datum.children.find(function (childData) {\n            return childData.tag == 'title';\n          });\n\n          if (title) {\n            if (title.children.length > 0) {\n              datum.key = title.children[0].text;\n            } else {\n              datum.key = '';\n            }\n          }\n        }\n      }\n\n      if (datum.key == null) {\n        if (tweenShapes) {\n          if (tag == 'ellipse' || tag == 'polygon') {\n            tag = 'path';\n          }\n        }\n\n        datum.key = tag + '-' + index;\n      }\n    }\n\n    function setId(datum, parentData) {\n      var id = (parentData ? parentData.id + '.' : '') + datum.key;\n      datum.id = id;\n    }\n\n    function addToDictionary(datum) {\n      dictionary[datum.id] = datum;\n    }\n\n    function calculateAlternativeShapeData(datum, prevDatum) {\n      if (tweenShapes && datum.id in prevDictionary) {\n        if ((prevDatum.tag == 'polygon' || prevDatum.tag == 'ellipse' || prevDatum.tag == 'path') && (prevDatum.tag != datum.tag || datum.tag == 'polygon')) {\n          if (prevDatum.tag != 'path') {\n            datum.alternativeOld = convertToPathData(prevDatum, datum);\n          }\n\n          if (datum.tag != 'path') {\n            datum.alternativeNew = convertToPathData(datum, prevDatum);\n          }\n        }\n      }\n    }\n\n    function calculatePathTweenPoints(datum, prevDatum) {\n      if (tweenPaths && prevDatum && (prevDatum.tag == 'path' || datum.alternativeOld && datum.alternativeOld.tag == 'path')) {\n        var attribute_d = (datum.alternativeNew || datum).attributes.d;\n\n        if (datum.alternativeOld) {\n          var oldNode = createElementWithAttributes(datum.alternativeOld);\n        } else {\n          var oldNode = createElementWithAttributes(prevDatum);\n        }\n\n        (datum.alternativeOld || (datum.alternativeOld = {})).points = pathTweenPoints(oldNode, attribute_d, tweenPrecision, tweenPrecisionIsRelative);\n      }\n    }\n\n    function postProcessDataPass1Local(datum) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var parentData = arguments[2];\n      setKey(datum, index);\n      setId(datum, parentData);\n      var id = datum.id;\n      var prevDatum = prevDictionary[id];\n      addToDictionary(datum);\n      calculateAlternativeShapeData(datum, prevDatum);\n      calculatePathTweenPoints(datum, prevDatum);\n      var childTagIndexes = {};\n      datum.children.forEach(function (childData) {\n        var childTag = childData.tag;\n\n        if (childTag == 'ellipse' || childTag == 'polygon') {\n          childTag = 'path';\n        }\n\n        if (childTagIndexes[childTag] == null) {\n          childTagIndexes[childTag] = 0;\n        }\n\n        var childIndex = childTagIndexes[childTag]++;\n        postProcessDataPass1Local(childData, childIndex, datum);\n      });\n    }\n\n    function addToNodeDictionary(datum) {\n      var tag = datum.tag;\n\n      if (growEnteringEdges && datum.parent) {\n        if (datum.parent.attributes.class == 'node') {\n          if (tag == 'title') {\n            if (datum.children.length > 0) {\n              var child = datum.children[0];\n              var nodeId = child.text;\n            } else {\n              var nodeId = '';\n            }\n\n            nodeDictionary[nodeId] = datum.parent;\n          }\n        }\n      }\n    }\n\n    function extractGrowingEdgesData(datum) {\n      var id = datum.id;\n      var tag = datum.tag;\n      var prevDatum = prevDictionary[id];\n\n      if (growEnteringEdges && !prevDatum && datum.parent) {\n        if (isEdgeElement(datum)) {\n          if (tag == 'path' || tag == 'polygon') {\n            if (tag == 'polygon') {\n              var path$$1 = datum.parent.children.find(function (e) {\n                return e.tag == 'path';\n              });\n              datum.totalLength = path$$1.totalLength;\n            }\n\n            var title = getEdgeTitle(datum);\n            var child = title.children[0];\n            var nodeIds = child.text.split('->');\n\n            if (nodeIds.length != 2) {\n              nodeIds = child.text.split('--');\n            }\n\n            var startNodeId = nodeIds[0];\n            var startNode = nodeDictionary[startNodeId];\n            var prevStartNode = prevNodeDictionary[startNodeId];\n\n            if (prevStartNode) {\n              var i = startNode.children.findIndex(function (element, index) {\n                return element.tag == 'g';\n              });\n\n              if (i >= 0) {\n                var j = startNode.children[i].children.findIndex(function (element, index) {\n                  return element.tag == 'a';\n                });\n                startNode = startNode.children[i].children[j];\n              }\n\n              var i = prevStartNode.children.findIndex(function (element, index) {\n                return element.tag == 'g';\n              });\n\n              if (i >= 0) {\n                var j = prevStartNode.children[i].children.findIndex(function (element, index) {\n                  return element.tag == 'a';\n                });\n                prevStartNode = prevStartNode.children[i].children[j];\n              }\n\n              var startShapes = startNode.children;\n\n              for (var i = 0; i < startShapes.length; i++) {\n                if (startShapes[i].tag == 'polygon' || startShapes[i].tag == 'ellipse' || startShapes[i].tag == 'path' || startShapes[i].tag == 'text') {\n                  var startShape = startShapes[i];\n                  break;\n                }\n              }\n\n              var prevStartShapes = prevStartNode.children;\n\n              for (var i = 0; i < prevStartShapes.length; i++) {\n                if (prevStartShapes[i].tag == 'polygon' || prevStartShapes[i].tag == 'ellipse' || prevStartShapes[i].tag == 'path' || prevStartShapes[i].tag == 'text') {\n                  var prevStartShape = prevStartShapes[i];\n                  break;\n                }\n              }\n\n              if (prevStartShape && startShape) {\n                datum.offset = {\n                  x: prevStartShape.center.x - startShape.center.x,\n                  y: prevStartShape.center.y - startShape.center.y\n                };\n              } else {\n                datum.offset = {\n                  x: 0,\n                  y: 0\n                };\n              }\n            }\n          }\n        }\n      }\n    }\n\n    function postProcessDataPass2Global(datum) {\n      addToNodeDictionary(datum);\n      extractGrowingEdgesData(datum);\n      datum.children.forEach(function (childData) {\n        postProcessDataPass2Global(childData);\n      });\n    }\n\n    this._dispatch.call(\"start\", this);\n\n    this._busy = true;\n\n    this._dispatch.call(\"layoutStart\", this);\n\n    var vizOptions = {\n      format: \"svg\",\n      engine: engine,\n      images: images,\n      totalMemory: totalMemory\n    };\n\n    if (this._worker) {\n      worker.postMessage({\n        dot: src,\n        options: vizOptions\n      });\n\n      worker.onmessage = function (event$$1) {\n        switch (event$$1.data.type) {\n          case \"done\":\n            return layoutDone.call(graphvizInstance, event$$1.data.svg);\n\n          case \"error\":\n            if (graphvizInstance._onerror) {\n              graphvizInstance._onerror(event$$1.data.error);\n            } else {\n              throw event$$1.data.error;\n            }\n\n            break;\n        }\n      };\n    } else {\n      try {\n        var svgDoc = Viz(src, vizOptions);\n      } catch (error) {\n        if (graphvizInstance._onerror) {\n          graphvizInstance._onerror(error.message);\n\n          return this;\n        } else {\n          throw error.message;\n        }\n      }\n\n      layoutDone.call(this, svgDoc);\n    }\n\n    function layoutDone(svgDoc) {\n      this._dispatch.call(\"layoutEnd\", this);\n\n      var newDoc = d3.select(document.createDocumentFragment()).append('div');\n      var parser = new window.DOMParser();\n      var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n      newDoc.append(function () {\n        return doc.documentElement;\n      });\n      var newSvg = newDoc.select('svg');\n      var data$$1 = extractAllElementsData(newSvg);\n\n      this._dispatch.call('dataExtractEnd', this);\n\n      postProcessDataPass1Local(data$$1);\n\n      this._dispatch.call('dataProcessPass1End', this);\n\n      postProcessDataPass2Global(data$$1);\n\n      this._dispatch.call('dataProcessPass2End', this);\n\n      this._data = data$$1;\n      this._dictionary = dictionary;\n      this._nodeDictionary = nodeDictionary;\n\n      this._extractData = function (element, childIndex, parentData) {\n        var data$$1 = extractAllElementsData(element);\n        postProcessDataPass1Local(data$$1, childIndex, parentData);\n        postProcessDataPass2Global(data$$1);\n        return data$$1;\n      };\n\n      this._busy = false;\n\n      this._dispatch.call('dataProcessEnd', this);\n\n      if (callback) {\n        callback.call(this);\n      }\n\n      if (this._queue.length > 0) {\n        var job = this._queue.shift();\n\n        job.call(this);\n      }\n    }\n\n    return this;\n  };\n\n  var renderDot = function (src, callback) {\n    var graphvizInstance = this;\n    this.dot(src, render);\n\n    function render() {\n      graphvizInstance.render(callback);\n    }\n\n    return this;\n  };\n\n  var transition$1 = function (name) {\n    if (name instanceof Function) {\n      this._transitionFactory = name;\n    } else {\n      this._transition = d3Transition.transition(name);\n    }\n\n    return this;\n  };\n\n  function active$1(name) {\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n\n    if (svg.size() != 0) {\n      return d3Transition.active(svg.node(), name);\n    } else {\n      return null;\n    }\n  }\n\n  var options = function (options) {\n    if (typeof options == 'undefined') {\n      return Object.assign({}, this._options);\n    } else {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = Object.keys(options)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var option = _step.value;\n          this._options[option] = options[option];\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var width = function (width) {\n    this._options.width = width;\n    return this;\n  };\n\n  var height = function (height) {\n    this._options.height = height;\n    return this;\n  };\n\n  var scale = function (scale) {\n    this._options.scale = scale;\n    return this;\n  };\n\n  var fit = function (fit) {\n    this._options.fit = fit;\n    return this;\n  };\n\n  var attributer = function (callback) {\n    this._attributer = callback;\n    return this;\n  };\n\n  var engine = function (engine) {\n    this._options.engine = engine;\n    return this;\n  };\n\n  var images = function (path$$1, width, height) {\n    this._images.push({\n      path: path$$1,\n      width: width,\n      height: height\n    });\n\n    return this;\n  };\n\n  var totalMemory = function (size) {\n    this._options.totalMemory = size;\n    return this;\n  };\n\n  var keyMode = function (keyMode) {\n    if (!this._keyModes.has(keyMode)) {\n      throw Error('Illegal keyMode: ' + keyMode);\n    }\n\n    if (keyMode != this._options.keyMode && this._data != null) {\n      throw Error('Too late to change keyMode');\n    }\n\n    this._options.keyMode = keyMode;\n    return this;\n  };\n\n  var fade = function (enable) {\n    this._options.fade = enable;\n    return this;\n  };\n\n  var tweenPaths = function (enable) {\n    this._options.tweenPaths = enable;\n    return this;\n  };\n\n  var tweenShapes = function (enable) {\n    this._options.tweenShapes = enable;\n\n    if (enable) {\n      this._options.tweenPaths = true;\n    }\n\n    return this;\n  };\n\n  var convertEqualSidedPolygons = function (enable) {\n    this._options.convertEqualSidedPolygons = enable;\n    return this;\n  };\n\n  var tweenPrecision = function (precision) {\n    this._options.tweenPrecision = precision;\n    return this;\n  };\n\n  var growEnteringEdges = function (enable) {\n    this._options.growEnteringEdges = enable;\n    return this;\n  };\n\n  var on = function (typenames, callback) {\n    this._dispatch.on(typenames, callback);\n\n    return this;\n  };\n\n  var onerror = function (callback) {\n    this._onerror = callback;\n    return this;\n  };\n\n  var defineProperty = function (obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  };\n\n  var toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  var logEvents = function (enable) {\n    var _this = this;\n\n    var t0 = Date.now();\n    var times = {};\n    var eventTypes = this._eventTypes;\n    var maxEventTypeLength = Math.max.apply(Math, toConsumableArray(eventTypes.map(function (eventType) {\n      return eventType.length;\n    })));\n\n    var _loop = function _loop(i) {\n      var eventType = eventTypes[i];\n      times[eventType] = [];\n      graphvizInstance = _this;\n\n      _this.on(eventType + '.log', enable ? function () {\n        var t = Date.now();\n        var seqNo = times[eventType].length;\n        times[eventType].push(t);\n        var string = '';\n        string += 'Event ';\n        string += d3Format.format(' >2')(i) + ' ';\n        string += eventType + ' '.repeat(maxEventTypeLength - eventType.length);\n        string += d3Format.format(' >5')(t - t0) + ' ';\n\n        if (eventType != 'initEnd') {\n          string += d3Format.format(' >5')(t - times['start'][seqNo]);\n        }\n\n        if (eventType == 'dataProcessEnd') {\n          string += ' prepare                 ' + d3Format.format(' >5')(t - times['layoutEnd'][seqNo]);\n        }\n\n        if (eventType == 'renderEnd' && graphvizInstance._transition) {\n          string += ' transition start margin ' + d3Format.format(' >5')(graphvizInstance._transition.delay() - (t - times['renderStart'][seqNo]));\n          expectedDelay = graphvizInstance._transition.delay();\n          expectedDuration = graphvizInstance._transition.duration();\n        }\n\n        if (eventType == 'transitionStart') {\n          var actualDelay = t - times['renderStart'][seqNo];\n          string += ' transition delay        ' + d3Format.format(' >5')(t - times['renderStart'][seqNo]);\n          string += ' expected ' + d3Format.format(' >5')(expectedDelay);\n          string += ' diff ' + d3Format.format(' >5')(actualDelay - expectedDelay);\n        }\n\n        if (eventType == 'transitionEnd') {\n          var actualDuration = t - times['transitionStart'][seqNo];\n          string += ' transition duration     ' + d3Format.format(' >5')(actualDuration);\n          string += ' expected ' + d3Format.format(' >5')(expectedDuration);\n          string += ' diff ' + d3Format.format(' >5')(actualDuration - expectedDuration);\n        }\n\n        console.log(string);\n        t0 = t;\n      } : null);\n    };\n\n    for (var i in eventTypes) {\n      var graphvizInstance;\n      var expectedDelay;\n      var expectedDuration;\n\n      _loop(i);\n    }\n\n    return this;\n  };\n\n  function rotate(x, y, cosA, sinA) {\n    // (x + j * y) * (cosA + j * sinA) = x * cosA - y * sinA + j * (x * sinA + y * cosA)\n    y = -y;\n    sinA = -sinA;\n    var _ref = [x * cosA - y * sinA, x * sinA + y * cosA];\n    x = _ref[0];\n    y = _ref[1];\n    y = -y;\n    return [x, y];\n  }\n\n  function drawEdge(x1, y1, x2, y2, attributes) {\n    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    attributes = Object.assign({}, attributes);\n\n    if (attributes.style && attributes.style.includes('invis')) {\n      var newEdge = d3.select(null);\n    } else {\n      var root = this._selection;\n      var svg = root.selectWithoutDataPropagation(\"svg\");\n      var graph0 = svg.selectWithoutDataPropagation(\"g\");\n      var newEdge0 = createEdge(attributes);\n      var edgeData = extractAllElementsData(newEdge0);\n      var newEdge = graph0.append('g').data([edgeData]);\n      attributeElement.call(newEdge.node(), edgeData);\n\n      _updateEdge(newEdge, x1, y1, x2, y2, attributes, options);\n    }\n\n    this._drawnEdge = {\n      g: newEdge,\n      x1: x1,\n      y1: y1,\n      x2: x2,\n      y2: y2,\n      attributes: attributes\n    };\n    return this;\n  }\n\n  function updateDrawnEdge(x1, y1, x2, y2) {\n    var attributes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n    if (!this._drawnEdge) {\n      throw Error('No edge has been drawn');\n    }\n\n    var edge = this._drawnEdge.g;\n    attributes = Object.assign(this._drawnEdge.attributes, attributes);\n    this._drawnEdge.x1 = x1;\n    this._drawnEdge.y1 = y1;\n    this._drawnEdge.x2 = x2;\n    this._drawnEdge.y2 = y2;\n\n    if (edge.empty() && !(attributes.style && attributes.style.includes('invis'))) {\n      var root = this._selection;\n      var svg = root.selectWithoutDataPropagation(\"svg\");\n      var graph0 = svg.selectWithoutDataPropagation(\"g\");\n      var edge = graph0.append('g');\n      this._drawnEdge.g = edge;\n    }\n\n    if (!edge.empty()) {\n      _updateEdge(edge, x1, y1, x2, y2, attributes, options);\n    }\n\n    return this;\n  }\n\n  function _updateEdge(edge, x1, y1, x2, y2, attributes, options) {\n    var newEdge = createEdge(attributes);\n    var edgeData = extractAllElementsData(newEdge);\n    edge.data([edgeData]);\n    attributeElement.call(edge.node(), edgeData);\n\n    _moveEdge(edge, x1, y1, x2, y2, attributes, options);\n  }\n\n  function _moveEdge(edge, x1, y1, x2, y2, attributes, options) {\n    var shortening = options.shortening || 0;\n    var arrowHeadLength = 10;\n    var arrowHeadWidth = 7;\n    var margin = 0.174;\n    var arrowHeadPoints = [[0, -arrowHeadWidth / 2], [arrowHeadLength, 0], [0, arrowHeadWidth / 2], [0, -arrowHeadWidth / 2]];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var length = Math.sqrt(dx * dx + dy * dy);\n\n    if (length == 0) {\n      var cosA = 1;\n      var sinA = 0;\n    } else {\n      var cosA = dx / length;\n      var sinA = dy / length;\n    }\n\n    x2 = x1 + (length - shortening - arrowHeadLength - margin) * cosA;\n    y2 = y1 + (length - shortening - arrowHeadLength - margin) * sinA;\n\n    if (attributes.URL || attributes.tooltip) {\n      var a = edge.selectWithoutDataPropagation(\"g\").selectWithoutDataPropagation(\"a\");\n      var line = a.selectWithoutDataPropagation(\"path\");\n      var arrowHead = a.selectWithoutDataPropagation(\"polygon\");\n    } else {\n      var line = edge.selectWithoutDataPropagation(\"path\");\n      var arrowHead = edge.selectWithoutDataPropagation(\"polygon\");\n    }\n\n    var path1 = d3Path.path();\n    path1.moveTo(x1, y1);\n    path1.lineTo(x2, y2);\n    line.attr(\"d\", path1);\n    x2 = x1 + (length - shortening - arrowHeadLength) * cosA;\n    y2 = y1 + (length - shortening - arrowHeadLength) * sinA;\n\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n      var point = arrowHeadPoints[i];\n      arrowHeadPoints[i] = rotate(point[0], point[1], cosA, sinA);\n    }\n\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n      var point = arrowHeadPoints[i];\n      arrowHeadPoints[i] = [x2 + point[0], y2 + point[1]];\n    }\n\n    var allPoints = [];\n\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n      var point = arrowHeadPoints[i];\n      allPoints.push(point.join(','));\n    }\n\n    var pointsAttr = allPoints.join(' ');\n    arrowHead.attr(\"points\", pointsAttr);\n    return this;\n  }\n\n  function moveDrawnEdgeEndPoint(x2, y2) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!this._drawnEdge) {\n      throw Error('No edge has been drawn');\n    }\n\n    var edge = this._drawnEdge.g;\n    var x1 = this._drawnEdge.x1;\n    var y1 = this._drawnEdge.y1;\n    var attributes = this._drawnEdge.attributes;\n    this._drawnEdge.x2 = x2;\n    this._drawnEdge.y2 = y2;\n\n    _moveEdge(edge, x1, y1, x2, y2, attributes, options);\n\n    return this;\n  }\n\n  function removeDrawnEdge() {\n    if (!this._drawnEdge) {\n      return this;\n    }\n\n    var edge = this._drawnEdge.g;\n    edge.remove();\n    this._drawnEdge = null;\n    return this;\n  }\n\n  function insertDrawnEdge(name) {\n    if (!this._drawnEdge) {\n      throw Error('No edge has been drawn');\n    }\n\n    var edge = this._drawnEdge.g;\n\n    if (edge.empty()) {\n      return this;\n    }\n\n    var attributes = this._drawnEdge.attributes;\n    var title = edge.selectWithoutDataPropagation(\"title\");\n    title.text(name);\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    var graph0 = svg.selectWithoutDataPropagation(\"g\");\n    var graph0Datum = graph0.datum();\n\n    var edgeData = this._extractData(edge, graph0Datum.children.length, graph0.datum());\n\n    graph0Datum.children.push(edgeData);\n    insertAllElementsData(edge, edgeData);\n    this._drawnEdge = null;\n    return this;\n  }\n\n  function drawnEdgeSelection() {\n    if (this._drawnEdge) {\n      return this._drawnEdge.g;\n    } else {\n      return d3.select(null);\n    }\n  }\n\n  function createEdge(attributes) {\n    var attributesString = '';\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = Object.keys(attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var name = _step.value;\n\n        if (attributes[name] != null) {\n          attributesString += ' \"' + name + '\"=\"' + attributes[name] + '\"';\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    var dotSrc = 'digraph {a -> b [' + attributesString + ']}';\n    var svgDoc = Viz(dotSrc, {\n      format: 'svg'\n    });\n    var parser = new window.DOMParser();\n    var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n    var newDoc = d3.select(document.createDocumentFragment()).append(function () {\n      return doc.documentElement;\n    });\n    var edge = newDoc.select('.edge');\n    return edge;\n  }\n\n  function drawNode(x, y, nodeId) {\n    var attributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    attributes = Object.assign({}, attributes);\n\n    if (attributes.style && attributes.style.includes('invis')) {\n      var newNode = d3.select(null);\n    } else {\n      var root = this._selection;\n      var svg = root.selectWithoutDataPropagation(\"svg\");\n      var graph0 = svg.selectWithoutDataPropagation(\"g\");\n      var newNode0 = createNode(nodeId, attributes);\n      var nodeData = extractAllElementsData(newNode0);\n      var newNode = graph0.append('g').data([nodeData]);\n      attributeElement.call(newNode.node(), nodeData);\n\n      _updateNode(newNode, x, y, nodeId, attributes, options);\n    }\n\n    this._drawnNode = {\n      g: newNode,\n      nodeId: nodeId,\n      x: x,\n      y: y,\n      attributes: attributes\n    };\n    return this;\n  }\n\n  function updateDrawnNode(x, y, nodeId) {\n    var attributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    if (!this._drawnNode) {\n      throw Error('No node has been drawn');\n    }\n\n    var node = this._drawnNode.g;\n\n    if (nodeId == null) {\n      nodeId = this._drawnNode.nodeId;\n    }\n\n    attributes = Object.assign(this._drawnNode.attributes, attributes);\n    this._drawnNode.nodeId = nodeId;\n    this._drawnNode.x = x;\n    this._drawnNode.y = y;\n\n    if (node.empty() && !(attributes.style && attributes.style.includes('invis'))) {\n      var root = this._selection;\n      var svg = root.selectWithoutDataPropagation(\"svg\");\n      var graph0 = svg.selectWithoutDataPropagation(\"g\");\n      var node = graph0.append('g');\n      this._drawnNode.g = node;\n    }\n\n    if (!node.empty()) {\n      _updateNode(node, x, y, nodeId, attributes, options);\n    }\n\n    return this;\n  }\n\n  function _updateNode(node, x, y, nodeId, attributes, options) {\n    var newNode = createNode(nodeId, attributes);\n    var nodeData = extractAllElementsData(newNode);\n    node.data([nodeData]);\n    attributeElement.call(node.node(), nodeData);\n\n    _moveNode(node, x, y, attributes, options);\n\n    return this;\n  }\n\n  function _moveNode(node, x, y, attributes, options) {\n    if (attributes.URL || attributes.tooltip) {\n      var subParent = node.selectWithoutDataPropagation(\"g\").selectWithoutDataPropagation(\"a\");\n    } else {\n      var subParent = node;\n    }\n\n    var svgElements = subParent.selectAll('ellipse,polygon,path,polyline');\n    var text = node.selectWithoutDataPropagation(\"text\");\n\n    if (svgElements.size() != 0) {\n      var bbox = svgElements.node().getBBox();\n      bbox.cx = bbox.x + bbox.width / 2;\n      bbox.cy = bbox.y + bbox.height / 2;\n    } else if (text.size() != 0) {\n      bbox = {\n        x: +text.attr('x'),\n        y: +text.attr('y'),\n        width: 0,\n        height: 0,\n        cx: +text.attr('x'),\n        cy: +text.attr('y')\n      };\n    }\n\n    svgElements.each(function (data, index) {\n      var svgElement = d3.select(this);\n\n      if (svgElement.attr(\"cx\")) {\n        svgElement.attr(\"cx\", roundTo4Decimals(x)).attr(\"cy\", roundTo4Decimals(y));\n      } else if (svgElement.attr(\"points\")) {\n        var pointsString = svgElement.attr('points').trim();\n        svgElement.attr(\"points\", translatePointsAttribute(pointsString, x - bbox.cx, y - bbox.cy));\n      } else {\n        var d = svgElement.attr('d');\n        svgElement.attr(\"d\", translateDAttribute(d, x - bbox.cx, y - bbox.cy));\n      }\n    });\n\n    if (text.size() != 0) {\n      text.attr(\"x\", roundTo4Decimals(+text.attr(\"x\") + x - bbox.cx)).attr(\"y\", roundTo4Decimals(+text.attr(\"y\") + y - bbox.cy));\n    }\n\n    return this;\n  }\n\n  function moveDrawnNode(x, y) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!this._drawnNode) {\n      throw Error('No node has been drawn');\n    }\n\n    var node = this._drawnNode.g;\n    var attributes = this._drawnNode.attributes;\n    this._drawnNode.x = x;\n    this._drawnNode.y = y;\n\n    if (!node.empty()) {\n      _moveNode(node, x, y, attributes, options);\n    }\n\n    return this;\n  }\n\n  function removeDrawnNode() {\n    if (!this._drawnNode) {\n      return this;\n    }\n\n    var node = this._drawnNode.g;\n\n    if (!node.empty()) {\n      node.remove();\n    }\n\n    this._drawnNode = null;\n    return this;\n  }\n\n  function insertDrawnNode(nodeId) {\n    if (!this._drawnNode) {\n      throw Error('No node has been drawn');\n    }\n\n    if (nodeId == null) {\n      nodeId = this._drawnNode.nodeId;\n    }\n\n    var node = this._drawnNode.g;\n\n    if (node.empty()) {\n      return this;\n    }\n\n    var attributes = this._drawnNode.attributes;\n    var title = node.selectWithoutDataPropagation(\"title\");\n    title.text(nodeId);\n\n    if (attributes.URL || attributes.tooltip) {\n      var ga = node.selectWithoutDataPropagation(\"g\");\n      var a = ga.selectWithoutDataPropagation(\"a\");\n      var svgElement = a.selectWithoutDataPropagation('ellipse,polygon,path,polyline');\n      var text = a.selectWithoutDataPropagation('text');\n    } else {\n      var svgElement = node.selectWithoutDataPropagation('ellipse,polygon,path,polyline');\n      var text = node.selectWithoutDataPropagation('text');\n    }\n\n    text.text(attributes.label || nodeId);\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    var graph0 = svg.selectWithoutDataPropagation(\"g\");\n    var graph0Datum = graph0.datum();\n\n    var nodeData = this._extractData(node, graph0Datum.children.length, graph0.datum());\n\n    graph0Datum.children.push(nodeData);\n    insertAllElementsData(node, nodeData);\n    this._drawnNode = null;\n    return this;\n  }\n\n  function drawnNodeSelection() {\n    if (this._drawnNode) {\n      return this._drawnNode.g;\n    } else {\n      return d3.select(null);\n    }\n  }\n\n  function createNode(nodeId, attributes) {\n    var attributesString = '';\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = Object.keys(attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var name = _step.value;\n\n        if (attributes[name] != null) {\n          attributesString += ' \"' + name + '\"=\"' + attributes[name] + '\"';\n        }\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    var dotSrc = 'graph {\"' + nodeId + '\" [' + attributesString + ']}';\n    var svgDoc = Viz(dotSrc, {\n      format: 'svg'\n    });\n    var parser = new window.DOMParser();\n    var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n    var newDoc = d3.select(document.createDocumentFragment()).append(function () {\n      return doc.documentElement;\n    });\n    var node = newDoc.select('.node');\n    return node;\n  }\n\n  var _graphviz$prototype;\n\n  function Graphviz(selection$$1, options$$1) {\n    this._options = {\n      useWorker: true,\n      engine: 'dot',\n      totalMemory: undefined,\n      keyMode: 'title',\n      fade: true,\n      tweenPaths: true,\n      tweenShapes: true,\n      convertEqualSidedPolygons: true,\n      tweenPrecision: 1,\n      growEnteringEdges: true,\n      zoom: true,\n      zoomScaleExtent: [0.1, 10],\n      zoomTranslateExtent: [[-Infinity, -Infinity], [+Infinity, +Infinity]],\n      width: null,\n      height: null,\n      scale: 1,\n      fit: false\n    };\n\n    if (options$$1 instanceof Object) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = Object.keys(options$$1)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var option = _step.value;\n          this._options[option] = options$$1[option];\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } else if (typeof options$$1 == 'boolean') {\n      this._options.useWorker = options$$1;\n    }\n\n    var useWorker = this._options.useWorker;\n\n    if (typeof Worker == 'undefined') {\n      useWorker = false;\n    }\n\n    if (useWorker) {\n      var scripts = d3.selectAll('script');\n      var vizScript = scripts.filter(function () {\n        return d3.select(this).attr('type') == 'javascript/worker' || d3.select(this).attr('src') && d3.select(this).attr('src').match(/.*\\/viz.js$/);\n      });\n\n      if (vizScript.size() == 0) {\n        console.warn('No script tag of type \"javascript/worker\" was found and \"useWorker\" is true. Not using web worker.');\n        useWorker = false;\n      } else {\n        this._vizURL = vizScript.attr('src');\n\n        if (!this._vizURL) {\n          console.warn('No \"src\" attribute of was found on the \"javascript/worker\" script tag and \"useWorker\" is true. Not using web worker.');\n          useWorker = false;\n        }\n      }\n    }\n\n    if (useWorker) {\n      var js = \"\\n            onmessage = function(event) {\\n                if (event.data.vizURL) {\\n                    importScripts(event.data.vizURL);\\n                }\\n                try {\\n                    var svg = Viz(event.data.dot, event.data.options);\\n                }\\n                catch(error) {\\n                    postMessage({\\n                        type: \\\"error\\\",\\n                        error: error.message,\\n                    });\\n                    return;\\n                }\\n                if (svg) {\\n                    postMessage({\\n                        type: \\\"done\\\",\\n                        svg: svg,\\n                    });\\n                } else {\\n                    postMessage({\\n                        type: \\\"skip\\\",\\n                    });\\n                }\\n            }\\n        \";\n      var blob = new Blob([js]);\n      var blobURL = window.URL.createObjectURL(blob);\n      this._worker = new Worker(blobURL);\n    }\n\n    this._selection = selection$$1;\n    this._active = false;\n    this._busy = false;\n    this._jobs = [];\n    this._queue = [];\n    this._keyModes = new Set(['title', 'id', 'tag-index', 'index']);\n    this._images = [];\n    this._translation = undefined;\n    this._scale = undefined;\n    this._eventTypes = ['initEnd', 'start', 'layoutStart', 'layoutEnd', 'dataExtractEnd', 'dataProcessPass1End', 'dataProcessPass2End', 'dataProcessEnd', 'renderStart', 'renderEnd', 'transitionStart', 'transitionEnd', 'restoreEnd', 'end'];\n    this._dispatch = d3Dispatch.dispatch.apply(undefined, toConsumableArray(this._eventTypes));\n    initViz.call(this);\n    selection$$1.node().__graphviz__ = this;\n  }\n\n  function graphviz(selector, options$$1) {\n    var g = d3.select(selector).graphviz(options$$1);\n    return g;\n  }\n\n  Graphviz.prototype = graphviz.prototype = (_graphviz$prototype = {\n    constructor: Graphviz,\n    engine: engine,\n    addImage: images,\n    totalMemory: totalMemory,\n    keyMode: keyMode,\n    fade: fade,\n    tweenPaths: tweenPaths,\n    tweenShapes: tweenShapes,\n    convertEqualSidedPolygons: convertEqualSidedPolygons,\n    tweenPrecision: tweenPrecision,\n    growEnteringEdges: growEnteringEdges,\n    zoom: zoom$1,\n    resetZoom: resetZoom,\n    zoomBehavior: zoomBehavior,\n    zoomSelection: zoomSelection,\n    zoomScaleExtent: zoomScaleExtent,\n    zoomTranslateExtent: zoomTranslateExtent,\n    render: render,\n    dot: dot,\n    data: data,\n    renderDot: renderDot,\n    transition: transition$1,\n    active: active$1,\n    options: options,\n    width: width,\n    height: height,\n    scale: scale,\n    fit: fit,\n    attributer: attributer,\n    on: on,\n    onerror: onerror,\n    logEvents: logEvents,\n    drawEdge: drawEdge,\n    updateDrawnEdge: updateDrawnEdge,\n    moveDrawnEdgeEndPoint: moveDrawnEdgeEndPoint,\n    insertDrawnEdge: insertDrawnEdge,\n    removeDrawnEdge: removeDrawnEdge\n  }, defineProperty(_graphviz$prototype, \"removeDrawnEdge\", removeDrawnEdge), defineProperty(_graphviz$prototype, \"drawnEdgeSelection\", drawnEdgeSelection), defineProperty(_graphviz$prototype, \"drawnEdgeSelection\", drawnEdgeSelection), defineProperty(_graphviz$prototype, \"drawNode\", drawNode), defineProperty(_graphviz$prototype, \"updateDrawnNode\", updateDrawnNode), defineProperty(_graphviz$prototype, \"moveDrawnNode\", moveDrawnNode), defineProperty(_graphviz$prototype, \"insertDrawnNode\", insertDrawnNode), defineProperty(_graphviz$prototype, \"removeDrawnNode\", removeDrawnNode), defineProperty(_graphviz$prototype, \"removeDrawnNode\", removeDrawnNode), defineProperty(_graphviz$prototype, \"drawnNodeSelection\", drawnNodeSelection), defineProperty(_graphviz$prototype, \"drawnNodeSelection\", drawnNodeSelection), _graphviz$prototype);\n\n  var selection_graphviz = function (options) {\n    var g = this.node().__graphviz__;\n\n    if (g) {\n      g.options(options);\n\n      g._dispatch.call(\"initEnd\", this);\n    } else {\n      g = new Graphviz(this, options);\n    }\n\n    return g;\n  };\n\n  var selection_selectWithoutDataPropagation = function (name) {\n    return d3.select(this.size() > 0 ? this.node().querySelector(name) : null);\n  };\n\n  d3.selection.prototype.graphviz = selection_graphviz;\n  d3.selection.prototype.selectWithoutDataPropagation = selection_selectWithoutDataPropagation;\n  exports.graphviz = graphviz;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["global","factory","exports","module","require","define","amd","d3","Viz","d3Dispatch","d3Transition","d3Timer","d3Interpolate","d3Zoom","d3Format","d3Path","hasOwnProperty","extractElementData","element","datum","tag","node","nodeName","text","comment","attributes","i","length","attribute","name","value","transform","baseVal","numberOfItems","matrix","consolidate","translation","x","e","y","f","scale","a","center","cx","cy","points","attr","split","map","p","xmin","Math","min","apply","xmax","max","ymin","ymax","bbox","width","height","d","shift","totalLength","getTotalLength","extractAllElementsData","children","selectAll","childNodes","each","childData","select","parent","push","createElement","data","document","createTextNode","createComment","createElementNS","createElementWithAttributes","elementNode","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iterator","Object","keys","Symbol","iterator","_step","next","done","attributeName","attributeValue","err","return","replaceElement","parentNode","newElementNode","newElement","insert","remove","insertElementData","key","insertAllElementsData","insertChildren","index","childrenEnter","enter","append","childrenExit","exit","merge","childTagIndexes","childTag","childIndex","attributeElement","call","arguments","currentAttributes","currentAttribute","namespaceURI","namespaceURIParts","namespace","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","shallowCopyObject","obj","assign","roundTo4Decimals","round","zoom$1","enable","_options","zoom","_zoomBehavior","createZoomBehavior","zoomed","g","svg","querySelector","event","root","_selection","size","_zoomSelection","zoomBehavior","scaleExtent","zoomScaleExtent","translateExtent","zoomTranslateExtent","interpolate","on","_active","translateZoomBehaviorTransform","_originalTransform","zoomTransform","getTranslatedZoomTransform","selection$$1","oldTranslation","_translation","oldScale","_scale","newTranslation","newScale","t","translate","zoomIdentity","resetZoom","transition$$1","transition","extent","zoomSelection","pathTween","d1","pointInterpolators","join","pathTweenPoints","precision","precisionIsRelative","path0","path1","cloneNode","n0","n1","setAttribute","distances","dt","p0","getPointAtLength","p1","_data","isEdgeElementParent","class","isEdgeElement","getEdgeGroup","getEdgeTitle","find","render","callback","_busy","_queue","bind","_dispatch","_transitionFactory","timeout","_transition","_render","transitionInstance","fade","tweenPaths","tweenShapes","convertEqualSidedPolygons","growEnteringEdges","attributer","_attributer","graphvizInstance","nodeValue","childElementsEnter","filter","childEnter","style","attributeElement$$1","data$$1","options","replace","fit","viewBox","convertShape","convertPrevShape","alternativeOld","alternativeNew","prevData","prevPoints","nPrevPoints","nPoints","prevPathData","pathElement","newPathData","elementTransition","growThisPath","offset","moveThisPolygon","edgePath","p2","angle1","atan2","PI","attrTween","angle","tweenThisPath","onEnd","tween","interpolateTransformSvg","toString","nodes","jobs","_jobs","duration","convertToPathData","originalData","guideData","newData","originalAttributes","newAttributes","newPointsString","pointsString","pointStrings","normPoints","xy","x0","y0","x1","y1","dx","dy","x2","Infinity","newPointStrings","concat","slice","rx","ry","sx","sy","l","sqrt","pow","cosA","sinA","y2","translatePointsAttribute","translateDAttribute","commands","reduce","arr","v","initViz","_worker","vizURL","_vizURL","onmessage","event$$1","match","window","URL","location","href","postMessage","dot","src","worker","engine","images","_images","totalMemory","keyMode","tweenPrecision","includes","tweenPrecisionIsRelative","dictionary","prevDictionary","_dictionary","nodeDictionary","prevNodeDictionary","_nodeDictionary","setKey","id","title","setId","parentData","addToDictionary","calculateAlternativeShapeData","prevDatum","calculatePathTweenPoints","attribute_d","oldNode","postProcessDataPass1Local","forEach","addToNodeDictionary","child","nodeId","extractGrowingEdgesData","path$$1","nodeIds","startNodeId","startNode","prevStartNode","findIndex","j","startShapes","startShape","prevStartShapes","prevStartShape","postProcessDataPass2Global","vizOptions","format","type","layoutDone","_onerror","error","svgDoc","message","newDoc","createDocumentFragment","parser","DOMParser","doc","parseFromString","documentElement","newSvg","_extractData","job","renderDot","transition$1","Function","active$1","selectWithoutDataPropagation","active","option","path","_keyModes","has","Error","typenames","onerror","defineProperty","enumerable","configurable","writable","toConsumableArray","Array","isArray","arr2","from","logEvents","_this","t0","Date","now","times","eventTypes","_eventTypes","maxEventTypeLength","eventType","_loop","seqNo","string","repeat","delay","expectedDelay","expectedDuration","actualDelay","actualDuration","console","log","rotate","_ref","drawEdge","newEdge","graph0","newEdge0","createEdge","edgeData","_updateEdge","_drawnEdge","updateDrawnEdge","edge","empty","_moveEdge","shortening","arrowHeadLength","arrowHeadWidth","margin","arrowHeadPoints","tooltip","line","arrowHead","moveTo","lineTo","point","allPoints","pointsAttr","moveDrawnEdgeEndPoint","removeDrawnEdge","insertDrawnEdge","graph0Datum","drawnEdgeSelection","attributesString","dotSrc","drawNode","newNode","newNode0","createNode","nodeData","_updateNode","_drawnNode","updateDrawnNode","_moveNode","subParent","svgElements","getBBox","svgElement","trim","moveDrawnNode","removeDrawnNode","insertDrawnNode","ga","label","drawnNodeSelection","_graphviz$prototype","Graphviz","options$$1","useWorker","Worker","scripts","vizScript","warn","js","blob","Blob","blobURL","createObjectURL","Set","dispatch","__graphviz__","graphviz","selector","prototype","constructor","addImage","selection_graphviz","selection_selectWithoutDataPropagation","selection"],"sources":["/home/andres-pontaza/Documentos/GitHub/MIA_D_LABORATORIO_S2_2024/ejemplo7/Frontend/node_modules/d3-graphviz/build/d3-graphviz.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('d3-selection'), require('d3-dispatch'), require('d3-transition'), require('d3-timer'), require('d3-interpolate'), require('d3-zoom'), require('viz.js/viz'), require('d3-format'), require('d3-path')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'd3-selection', 'd3-dispatch', 'd3-transition', 'd3-timer', 'd3-interpolate', 'd3-zoom', 'viz.js/viz', 'd3-format', 'd3-path'], factory) :\n\t(factory((global['d3-graphviz'] = {}),global.d3,global.d3,global.d3,global.d3,global.d3,global.d3,global.Viz,global.d3,global.d3));\n}(this, (function (exports,d3,d3Dispatch,d3Transition,d3Timer,d3Interpolate,d3Zoom,Viz,d3Format,d3Path) { 'use strict';\n\nViz = Viz && Viz.hasOwnProperty('default') ? Viz['default'] : Viz;\n\nfunction extractElementData(element) {\n\n    var datum = {};\n    var tag = element.node().nodeName;\n    datum.tag = tag;\n    if (tag == '#text') {\n        datum.text = element.text();\n    } else if (tag == '#comment') {\n        datum.comment = element.text();\n    }\n    datum.attributes = {};\n    var attributes = element.node().attributes;\n    if (attributes) {\n        for (var i = 0; i < attributes.length; i++) {\n            var attribute = attributes[i];\n            var name = attribute.name;\n            var value = attribute.value;\n            datum.attributes[name] = value;\n        }\n    }\n    var transform = element.node().transform;\n    if (transform && transform.baseVal.numberOfItems != 0) {\n        var matrix = transform.baseVal.consolidate().matrix;\n        datum.translation = { x: matrix.e, y: matrix.f };\n        datum.scale = matrix.a;\n    }\n    if (tag == 'ellipse') {\n        datum.center = {\n            x: datum.attributes.cx,\n            y: datum.attributes.cy\n        };\n    }\n    if (tag == 'polygon') {\n        var points = element.attr('points').split(' ');\n        var x = points.map(function (p) {\n            return p.split(',')[0];\n        });\n        var y = points.map(function (p) {\n            return p.split(',')[1];\n        });\n        var xmin = Math.min.apply(null, x);\n        var xmax = Math.max.apply(null, x);\n        var ymin = Math.min.apply(null, y);\n        var ymax = Math.max.apply(null, y);\n        var bbox = {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n        datum.bbox = bbox;\n        datum.center = {\n            x: (xmin + xmax) / 2,\n            y: (ymin + ymax) / 2\n        };\n    }\n    if (tag == 'path') {\n        var d = element.attr('d');\n        var points = d.split(/[A-Z ]/);\n        points.shift();\n        var x = points.map(function (p) {\n            return +p.split(',')[0];\n        });\n        var y = points.map(function (p) {\n            return +p.split(',')[1];\n        });\n        var xmin = Math.min.apply(null, x);\n        var xmax = Math.max.apply(null, x);\n        var ymin = Math.min.apply(null, y);\n        var ymax = Math.max.apply(null, y);\n        var bbox = {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n        datum.bbox = bbox;\n        datum.center = {\n            x: (xmin + xmax) / 2,\n            y: (ymin + ymax) / 2\n        };\n        datum.totalLength = element.node().getTotalLength();\n    }\n    if (tag == 'text') {\n        datum.center = {\n            x: element.attr('x'),\n            y: element.attr('y')\n        };\n    }\n    if (tag == '#text') {\n        datum.text = element.text();\n    } else if (tag == '#comment') {\n        datum.comment = element.text();\n    }\n    return datum;\n}\n\nfunction extractAllElementsData(element) {\n\n    var datum = extractElementData(element);\n    datum.children = [];\n    var children = d3.selectAll(element.node().childNodes);\n    children.each(function () {\n        var childData = extractAllElementsData(d3.select(this));\n        childData.parent = datum;\n        datum.children.push(childData);\n    });\n    return datum;\n}\n\nfunction createElement(data) {\n\n    if (data.tag == '#text') {\n        return document.createTextNode(\"\");\n    } else if (data.tag == '#comment') {\n        return document.createComment(data.comment);\n    } else {\n        return document.createElementNS('http://www.w3.org/2000/svg', data.tag);\n    }\n}\n\nfunction createElementWithAttributes(data) {\n\n    var elementNode = createElement(data);\n    var element = d3.select(elementNode);\n    var attributes = data.attributes;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = Object.keys(attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var attributeName = _step.value;\n\n            var attributeValue = attributes[attributeName];\n            element.attr(attributeName, attributeValue);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return elementNode;\n}\n\nfunction replaceElement(element, data) {\n    var parent = d3.select(element.node().parentNode);\n    var newElementNode = createElementWithAttributes(data);\n    var newElement = parent.insert(function () {\n        return newElementNode;\n    }, function () {\n        return element.node();\n    });\n    element.remove();\n    return newElement;\n}\n\nfunction insertElementData(element, datum) {\n    element.datum(datum);\n    element.data([datum], function (d) {\n        return d.key;\n    });\n}\n\nfunction insertAllElementsData(element, datum) {\n    insertElementData(element, datum);\n    var children = d3.selectAll(element.node().childNodes);\n    children.each(function (d, i) {\n        insertAllElementsData(d3.select(this), datum.children[i]);\n    });\n}\n\nfunction insertChildren(element, index) {\n    var children = element.selectAll(function () {\n        return element.node().childNodes;\n    });\n\n    children = children.data(function (d) {\n        return d.children;\n    }, function (d) {\n        return d.tag + '-' + index;\n    });\n    var childrenEnter = children.enter().append(function (d) {\n        return createElement(d);\n    });\n\n    var childrenExit = children.exit();\n    childrenExit = childrenExit.remove();\n    children = childrenEnter.merge(children);\n    var childTagIndexes = {};\n    children.each(function (childData) {\n        var childTag = childData.tag;\n        if (childTagIndexes[childTag] == null) {\n            childTagIndexes[childTag] = 0;\n        }\n        var childIndex = childTagIndexes[childTag]++;\n        attributeElement.call(this, childData, childIndex);\n    });\n}\n\nfunction attributeElement(data) {\n    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    var element = d3.select(this);\n    var tag = data.tag;\n    var attributes = data.attributes;\n    var currentAttributes = element.node().attributes;\n    if (currentAttributes) {\n        for (var i = 0; i < currentAttributes.length; i++) {\n            var currentAttribute = currentAttributes[i];\n            var name = currentAttribute.name;\n            if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {\n                var namespaceURIParts = currentAttribute.namespaceURI.split('/');\n                var namespace = namespaceURIParts[namespaceURIParts.length - 1];\n                name = namespace + ':' + name;\n            }\n            if (!(name in attributes)) {\n                attributes[name] = null;\n            }\n        }\n    }\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = Object.keys(attributes)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var attributeName = _step2.value;\n\n            element.attr(attributeName, attributes[attributeName]);\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    if (data.text) {\n        element.text(data.text);\n    }\n    insertChildren(element, index);\n}\n\nfunction shallowCopyObject(obj) {\n    return Object.assign({}, obj);\n}\n\nfunction roundTo4Decimals(x) {\n    return Math.round(x * 10000.0) / 10000.0;\n}\n\nvar zoom$1 = function (enable) {\n\n    this._options.zoom = enable;\n\n    if (this._options.zoom && !this._zoomBehavior) {\n        createZoomBehavior.call(this);\n    }\n\n    return this;\n};\n\nfunction createZoomBehavior() {\n\n    function zoomed() {\n        var g = d3.select(svg.node().querySelector(\"g\"));\n        g.attr('transform', d3.event.transform);\n    }\n\n    var root = this._selection;\n    var svg = d3.select(root.node().querySelector(\"svg\"));\n    if (svg.size() == 0) {\n        return this;\n    }\n    this._zoomSelection = svg;\n    var zoomBehavior = d3Zoom.zoom().scaleExtent(this._options.zoomScaleExtent).translateExtent(this._options.zoomTranslateExtent).interpolate(d3Interpolate.interpolate).on(\"zoom\", zoomed);\n    this._zoomBehavior = zoomBehavior;\n    var g = d3.select(svg.node().querySelector(\"g\"));\n    svg.call(zoomBehavior);\n    if (!this._active) {\n        translateZoomBehaviorTransform.call(this, g);\n    }\n    this._originalTransform = d3Zoom.zoomTransform(svg.node());\n\n    return this;\n}\n\nfunction getTranslatedZoomTransform(selection$$1) {\n\n    // Get the current zoom transform for the top level svg and\n    // translate it uniformly with the given selection, using the\n    // difference between the translation specified in the selection's\n    // data and it's saved previous translation. The selection is\n    // normally the top level g element of the graph.\n    var oldTranslation = this._translation;\n    var oldScale = this._scale;\n    var newTranslation = selection$$1.datum().translation;\n    var newScale = selection$$1.datum().scale;\n    var t = d3Zoom.zoomTransform(this._zoomSelection.node());\n    if (oldTranslation) {\n        t = t.scale(1 / oldScale);\n        t = t.translate(-oldTranslation.x, -oldTranslation.y);\n    }\n    t = t.translate(newTranslation.x, newTranslation.y);\n    t = t.scale(newScale);\n    return t;\n}\n\nfunction translateZoomBehaviorTransform(selection$$1) {\n\n    // Translate the current zoom transform for the top level svg\n    // uniformly with the given selection, using the difference\n    // between the translation specified in the selection's data and\n    // it's saved previous translation. The selection is normally the\n    // top level g element of the graph.\n    this._zoomBehavior.transform(this._zoomSelection, getTranslatedZoomTransform.call(this, selection$$1));\n\n    // Save the selections's new translation and scale.\n    this._translation = selection$$1.datum().translation;\n    this._scale = selection$$1.datum().scale;\n\n    // Set the original zoom transform to the translation and scale specified in\n    // the selection's data.\n    this._originalTransform = d3Zoom.zoomIdentity.translate(selection$$1.datum().translation.x, selection$$1.datum().translation.y).scale(selection$$1.datum().scale);\n}\n\nfunction resetZoom(transition$$1) {\n\n    // Reset the zoom transform to the original zoom transform.\n    var selection$$1 = this._zoomSelection;\n    if (transition$$1) {\n        selection$$1 = selection$$1.transition(transition$$1);\n    }\n    selection$$1.call(this._zoomBehavior.transform, this._originalTransform);\n\n    return this;\n}\n\nfunction zoomScaleExtent(extent) {\n\n    this._options.zoomScaleExtent = extent;\n\n    return this;\n}\n\nfunction zoomTranslateExtent(extent) {\n\n    this._options.zoomTranslateExtent = extent;\n\n    return this;\n}\n\nfunction zoomBehavior() {\n    return this._zoomBehavior || null;\n}\n\nfunction zoomSelection() {\n    return this._zoomSelection || null;\n}\n\nfunction pathTween(points, d1) {\n    return function () {\n        var pointInterpolators = points.map(function (p) {\n            return d3Interpolate.interpolate([p[0][0], p[0][1]], [p[1][0], p[1][1]]);\n        });\n        return function (t) {\n            return t < 1 ? \"M\" + pointInterpolators.map(function (p) {\n                return p(t);\n            }).join(\"L\") : d1;\n        };\n    };\n}\n\nfunction pathTweenPoints(node, d1, precision, precisionIsRelative) {\n    var path0 = node;\n    var path1 = path0.cloneNode();\n    var n0 = path0.getTotalLength();\n    var n1 = (path1.setAttribute(\"d\", d1), path1).getTotalLength();\n\n    // Uniform sampling of distance based on specified precision.\n    var distances = [0];\n    var i = 0;\n    var dt = precisionIsRelative ? precision : precision / Math.max(n0, n1);\n    while ((i += dt) < 1) {\n        distances.push(i);\n    }\n    distances.push(1);\n\n    // Compute point-interpolators at each distance.\n    var points = distances.map(function (t) {\n        var p0 = path0.getPointAtLength(t * n0);\n        var p1 = path1.getPointAtLength(t * n1);\n        return [[p0.x, p0.y], [p1.x, p1.y]];\n    });\n    return points;\n}\n\nvar data = function () {\n    return this._data || null;\n};\n\nfunction isEdgeElementParent(datum) {\n    return datum.attributes.class == 'edge' || datum.tag == 'a' && datum.parent.tag == 'g' && datum.parent.parent.attributes.class == 'edge';\n}\n\nfunction isEdgeElement(datum) {\n    return datum.parent && isEdgeElementParent(datum.parent);\n}\n\nfunction getEdgeGroup(datum) {\n    if (datum.parent.attributes.class == 'edge') {\n        return datum.parent;\n    } else {\n        // datum.parent.tag == 'g' && datum.parent.parent.tag == 'g' && datum.parent.parent.parent.attributes.class == 'edge'\n        return datum.parent.parent.parent;\n    }\n}\n\nfunction getEdgeTitle(datum) {\n    return getEdgeGroup(datum).children.find(function (e) {\n        return e.tag == 'title';\n    });\n}\n\nvar render = function (callback) {\n\n    if (this._busy) {\n        this._queue.push(this.render.bind(this, callback));\n        return this;\n    }\n    this._dispatch.call('renderStart', this);\n\n    if (this._transitionFactory) {\n        d3Timer.timeout(function () {\n            // Decouple from time spent. See https://github.com/d3/d3-timer/issues/27\n            this._transition = d3Transition.transition(this._transitionFactory());\n            _render.call(this, callback);\n        }.bind(this), 0);\n    } else {\n        _render.call(this, callback);\n    }\n    return this;\n};\n\nfunction _render(callback) {\n\n    var transitionInstance = this._transition;\n    var fade = this._options.fade && transitionInstance != null;\n    var tweenPaths = this._options.tweenPaths;\n    var tweenShapes = this._options.tweenShapes;\n    var convertEqualSidedPolygons = this._options.convertEqualSidedPolygons;\n    var growEnteringEdges = this._options.growEnteringEdges && transitionInstance != null;\n    var attributer = this._attributer;\n    var graphvizInstance = this;\n\n    function insertChildren(element) {\n        var children = element.selectAll(function () {\n            return element.node().childNodes;\n        });\n\n        children = children.data(function (d) {\n            return d.children;\n        }, function (d) {\n            return d.key;\n        });\n        var childrenEnter = children.enter().append(function (d) {\n            var element = createElement(d);\n            if (d.tag == '#text' && fade) {\n                element.nodeValue = d.text;\n            }\n            return element;\n        });\n\n        if (fade || growEnteringEdges && isEdgeElementParent(element.datum())) {\n            var childElementsEnter = childrenEnter.filter(function (d) {\n                return d.tag[0] == '#' ? null : this;\n            }).each(function (d) {\n                var childEnter = d3.select(this);\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = Object.keys(d.attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var attributeName = _step.value;\n\n                        var attributeValue = d.attributes[attributeName];\n                        childEnter.attr(attributeName, attributeValue);\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            });\n            childElementsEnter.filter(function (d) {\n                return d.tag == 'svg' || d.tag == 'g' ? null : this;\n            }).style(\"opacity\", 0.0);\n        }\n        var childrenExit = children.exit();\n        if (attributer) {\n            childrenExit.each(attributer);\n        }\n        if (transitionInstance) {\n            childrenExit = childrenExit.transition(transitionInstance);\n            if (fade) {\n                childrenExit.filter(function (d) {\n                    return d.tag[0] == '#' ? null : this;\n                }).style(\"opacity\", 0.0);\n            }\n        }\n        childrenExit = childrenExit.remove();\n        children = childrenEnter.merge(children);\n        children.each(attributeElement$$1);\n    }\n\n    function attributeElement$$1(data$$1) {\n        var element = d3.select(this);\n        if (data$$1.tag == \"svg\") {\n            var options = graphvizInstance._options;\n            if (options.width != null || options.height != null) {\n                var width = options.width;\n                var height = options.height;\n                if (width == null) {\n                    width = data$$1.attributes.width.replace('pt', '') * 4 / 3;\n                } else {\n                    element.attr(\"width\", width);\n                    data$$1.attributes.width = width;\n                }\n                if (height == null) {\n                    height = data$$1.attributes.height.replace('pt', '') * 4 / 3;\n                } else {\n                    element.attr(\"height\", height);\n                    data$$1.attributes.height = height;\n                }\n                if (!options.fit) {\n                    element.attr(\"viewBox\", \"0 0 \" + width * 3 / 4 / options.scale + \" \" + height * 3 / 4 / options.scale);\n                    data$$1.attributes.viewBox = \"0 0 \" + width * 3 / 4 / options.scale + \" \" + height * 3 / 4 / options.scale;\n                }\n            }\n            if (options.scale != 1 && (options.fit || options.width == null && options.height == null)) {\n                width = data$$1.attributes.viewBox.split(' ')[2];\n                height = data$$1.attributes.viewBox.split(' ')[3];\n                element.attr(\"viewBox\", \"0 0 \" + width / options.scale + \" \" + height / options.scale);\n                data$$1.attributes.viewBox = \"0 0 \" + width / options.scale + \" \" + height / options.scale;\n            }\n        }\n        if (attributer) {\n            element.each(attributer);\n        }\n        var tag = data$$1.tag;\n        var attributes = data$$1.attributes;\n        var currentAttributes = element.node().attributes;\n        if (currentAttributes) {\n            for (var i = 0; i < currentAttributes.length; i++) {\n                var currentAttribute = currentAttributes[i];\n                var name = currentAttribute.name;\n                if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {\n                    var namespaceURIParts = currentAttribute.namespaceURI.split('/');\n                    var namespace = namespaceURIParts[namespaceURIParts.length - 1];\n                    name = namespace + ':' + name;\n                }\n                if (!(name in attributes)) {\n                    attributes[name] = null;\n                }\n            }\n        }\n        var convertShape = false;\n        var convertPrevShape = false;\n        if (tweenShapes && transitionInstance) {\n            if ((this.nodeName == 'polygon' || this.nodeName == 'ellipse') && data$$1.alternativeOld) {\n                convertPrevShape = true;\n            }\n            if ((tag == 'polygon' || tag == 'ellipse') && data$$1.alternativeNew) {\n                convertShape = true;\n            }\n            if (this.nodeName == 'polygon' && tag == 'polygon') {\n                var prevData = extractElementData(element);\n                var prevPoints = prevData.attributes.points;\n                if (!convertEqualSidedPolygons) {\n                    var nPrevPoints = prevPoints.split(' ').length;\n                    var points = data$$1.attributes.points;\n                    var nPoints = points.split(' ').length;\n                    if (nPoints == nPrevPoints) {\n                        convertShape = false;\n                        convertPrevShape = false;\n                    }\n                }\n            }\n            if (convertPrevShape) {\n                var prevPathData = data$$1.alternativeOld;\n                var pathElement = replaceElement(element, prevPathData);\n                pathElement.data([data$$1], function () {\n                    return data$$1.key;\n                });\n                element = pathElement;\n            }\n            if (convertShape) {\n                var newPathData = data$$1.alternativeNew;\n                tag = 'path';\n                attributes = newPathData.attributes;\n            }\n        }\n        var elementTransition = element;\n        if (transitionInstance) {\n            elementTransition = elementTransition.transition(transitionInstance);\n            if (fade) {\n                elementTransition.filter(function (d) {\n                    return d.tag[0] == '#' ? null : this;\n                }).style(\"opacity\", 1.0);\n            }\n            elementTransition.filter(function (d) {\n                return d.tag[0] == '#' ? null : this;\n            }).on(\"end\", function () {\n                d3.select(this).attr('style', null);\n            });\n        }\n        var growThisPath = growEnteringEdges && tag == 'path' && data$$1.offset;\n        if (growThisPath) {\n            var totalLength = data$$1.totalLength;\n            element.attr(\"stroke-dasharray\", totalLength + \" \" + totalLength).attr(\"stroke-dashoffset\", totalLength).attr('transform', 'translate(' + data$$1.offset.x + ',' + data$$1.offset.y + ')');\n            attributes[\"stroke-dashoffset\"] = 0;\n            attributes['transform'] = 'translate(0,0)';\n            elementTransition.attr(\"stroke-dashoffset\", attributes[\"stroke-dashoffset\"]).attr('transform', attributes['transform']).on(\"start\", function () {\n                d3.select(this).style('opacity', null);\n            }).on(\"end\", function () {\n                d3.select(this).attr('stroke-dashoffset', null).attr('stroke-dasharray', null).attr('transform', null);\n            });\n        }\n        var moveThisPolygon = growEnteringEdges && tag == 'polygon' && isEdgeElement(data$$1) && data$$1.offset;\n        if (moveThisPolygon) {\n            var edgePath = d3.select(element.node().parentNode.querySelector(\"path\"));\n            var p0 = edgePath.node().getPointAtLength(0);\n            var p1 = edgePath.node().getPointAtLength(data$$1.totalLength);\n            var p2 = edgePath.node().getPointAtLength(data$$1.totalLength - 1);\n            var angle1 = Math.atan2(p1.y - p2.y, p1.x - p2.x) * 180 / Math.PI;\n            var x = p0.x - p1.x + data$$1.offset.x;\n            var y = p0.y - p1.y + data$$1.offset.y;\n            element.attr('transform', 'translate(' + x + ',' + y + ')');\n            elementTransition.attrTween(\"transform\", function () {\n                return function (t) {\n                    var p = edgePath.node().getPointAtLength(data$$1.totalLength * t);\n                    var p2 = edgePath.node().getPointAtLength(data$$1.totalLength * t + 1);\n                    var angle = Math.atan2(p2.y - p.y, p2.x - p.x) * 180 / Math.PI - angle1;\n                    x = p.x - p1.x + data$$1.offset.x * (1 - t);\n                    y = p.y - p1.y + data$$1.offset.y * (1 - t);\n                    return 'translate(' + x + ',' + y + ') rotate(' + angle + ' ' + p1.x + ' ' + p1.y + ')';\n                };\n            }).on(\"start\", function () {\n                d3.select(this).style('opacity', null);\n            }).on(\"end\", function () {\n                d3.select(this).attr('transform', null);\n            });\n        }\n        var tweenThisPath = tweenPaths && transitionInstance && tag == 'path' && element.attr('d') != null;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n            for (var _iterator2 = Object.keys(attributes)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var attributeName = _step2.value;\n\n                var attributeValue = attributes[attributeName];\n                if (tweenThisPath && attributeName == 'd') {\n                    var points = (data$$1.alternativeOld || data$$1).points;\n                    if (points) {\n                        elementTransition.attrTween(\"d\", pathTween(points, attributeValue));\n                    }\n                } else {\n                    if (attributeName == 'transform' && data$$1.translation) {\n                        if (transitionInstance) {\n                            var onEnd = elementTransition.on(\"end\");\n                            elementTransition.on(\"start\", function () {\n                                if (graphvizInstance._zoomBehavior) {\n                                    // Update the transform to transition to, just before the transition starts\n                                    // in order to catch changes between the transition scheduling to its start.\n                                    elementTransition.tween(\"attr.transform\", function () {\n                                        var node = this;\n                                        return function (t) {\n                                            node.setAttribute(\"transform\", d3Interpolate.interpolateTransformSvg(d3Zoom.zoomTransform(graphvizInstance._zoomSelection.node()).toString(), getTranslatedZoomTransform.call(graphvizInstance, element).toString())(t));\n                                        };\n                                    });\n                                }\n                            }).on(\"end\", function () {\n                                onEnd.call(this);\n                                // Update the zoom transform to the new translated transform\n                                if (graphvizInstance._zoomBehavior) {\n                                    translateZoomBehaviorTransform.call(graphvizInstance, element);\n                                }\n                            });\n                        } else {\n                            if (graphvizInstance._zoomBehavior) {\n                                // Update the transform attribute to set with the current pan translation\n                                attributeValue = getTranslatedZoomTransform.call(graphvizInstance, element).toString();\n                            }\n                        }\n                    }\n                    elementTransition.attr(attributeName, attributeValue);\n                }\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                }\n            } finally {\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n\n        if (convertShape) {\n            elementTransition.on(\"end\", function (d, i, nodes) {\n                pathElement = d3.select(this);\n                var newElement = replaceElement(pathElement, d);\n                newElement.data([d], function () {\n                    return d.key;\n                });\n            });\n        }\n        if (data$$1.text) {\n            elementTransition.text(data$$1.text);\n        }\n        insertChildren(element);\n    }\n\n    var root = this._selection;\n\n    if (transitionInstance != null) {\n        // Ensure original SVG shape elements are restored after transition before rendering new graph\n        var jobs = this._jobs;\n        if (graphvizInstance._active) {\n            jobs.push(null);\n            return this;\n        } else {\n            root.transition(transitionInstance).transition().duration(0).on(\"end\", function () {\n                graphvizInstance._active = false;\n                if (jobs.length != 0) {\n                    jobs.shift();\n                    graphvizInstance.render();\n                }\n            });\n            this._active = true;\n        }\n    }\n\n    if (transitionInstance != null) {\n        root.transition(transitionInstance).on(\"start\", function () {\n            graphvizInstance._dispatch.call('transitionStart', graphvizInstance);\n        }).on(\"end\", function () {\n            graphvizInstance._dispatch.call('transitionEnd', graphvizInstance);\n        }).transition().duration(0).on(\"start\", function () {\n            graphvizInstance._dispatch.call('restoreEnd', graphvizInstance);\n            graphvizInstance._dispatch.call('end', graphvizInstance);\n            if (callback) {\n                callback.call(graphvizInstance);\n            }\n        });\n    }\n\n    var data$$1 = this._data;\n\n    var svg = root.selectAll(\"svg\").data([data$$1], function (d) {\n        return d.key;\n    });\n    svg = svg.enter().append(\"svg\").merge(svg);\n\n    attributeElement$$1.call(svg.node(), data$$1);\n\n    if (this._options.zoom && !this._zoomBehavior) {\n        createZoomBehavior.call(this);\n    }\n\n    graphvizInstance._dispatch.call('renderEnd', graphvizInstance);\n\n    if (transitionInstance == null) {\n        this._dispatch.call('end', this);\n        if (callback) {\n            callback.call(this);\n        }\n    }\n\n    return this;\n}\n\nfunction convertToPathData(originalData, guideData) {\n    if (originalData.tag == 'polygon') {\n        var newData = shallowCopyObject(originalData);\n        newData.tag = 'path';\n        var originalAttributes = originalData.attributes;\n        var newAttributes = shallowCopyObject(originalAttributes);\n        var newPointsString = originalAttributes.points;\n        if (guideData.tag == 'polygon') {\n            var bbox = originalData.bbox;\n            bbox.cx = bbox.x + bbox.width / 2;\n            bbox.cy = bbox.y + bbox.height / 2;\n            var pointsString = originalAttributes.points;\n            var pointStrings = pointsString.split(' ');\n            var normPoints = pointStrings.map(function (p) {\n                var xy = p.split(',');return [xy[0] - bbox.cx, xy[1] - bbox.cy];\n            });\n            var x0 = normPoints[normPoints.length - 1][0];\n            var y0 = normPoints[normPoints.length - 1][1];\n            for (var i = 0; i < normPoints.length; i++, x0 = x1, y0 = y1) {\n                var x1 = normPoints[i][0];\n                var y1 = normPoints[i][1];\n                var dx = x1 - x0;\n                var dy = y1 - y0;\n                if (dy == 0) {\n                    continue;\n                } else {\n                    var x2 = x0 - y0 * dx / dy;\n                }\n                if (0 <= x2 && x2 < Infinity && (x0 <= x2 && x2 <= x1 || x1 <= x2 && x2 <= x0)) {\n                    break;\n                }\n            }\n            var newPointStrings = [[bbox.cx + x2, bbox.cy + 0].join(',')];\n            newPointStrings = newPointStrings.concat(pointStrings.slice(i));\n            newPointStrings = newPointStrings.concat(pointStrings.slice(0, i));\n            newPointsString = newPointStrings.join(' ');\n        }\n        newAttributes['d'] = 'M' + newPointsString + 'z';\n        delete newAttributes.points;\n        newData.attributes = newAttributes;\n    } else /* if (originalData.tag == 'ellipse') */{\n            var newData = shallowCopyObject(originalData);\n            newData.tag = 'path';\n            var originalAttributes = originalData.attributes;\n            var newAttributes = shallowCopyObject(originalAttributes);\n            var cx = originalAttributes.cx;\n            var cy = originalAttributes.cy;\n            var rx = originalAttributes.rx;\n            var ry = originalAttributes.ry;\n            if (guideData.tag == 'polygon') {\n                var bbox = guideData.bbox;\n                bbox.cx = bbox.x + bbox.width / 2;\n                bbox.cy = bbox.y + bbox.height / 2;\n                var p = guideData.attributes.points.split(' ')[0].split(',');\n                var sx = p[0];\n                var sy = p[1];\n                var dx = sx - bbox.cx;\n                var dy = sy - bbox.cy;\n                var l = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                var cosA = dx / l;\n                var sinA = -dy / l;\n            } else {\n                // if (guideData.tag == 'path') {\n                // FIXME: add support for getting start position from path\n                var cosA = 1;\n                var sinA = 0;\n            }\n            var x1 = rx * cosA;\n            var y1 = -ry * sinA;\n            var x2 = rx * -cosA;\n            var y2 = -ry * -sinA;\n            var dx = x2 - x1;\n            var dy = y2 - y1;\n            newAttributes['d'] = 'M ' + cx + ' ' + cy + ' m ' + x1 + ',' + y1 + ' a ' + rx + ',' + ry + ' 0 1,0 ' + dx + ',' + dy + ' a ' + rx + ',' + ry + ' 0 1,0 ' + -dx + ',' + -dy + 'z';\n            delete newAttributes.cx;\n            delete newAttributes.cy;\n            delete newAttributes.rx;\n            delete newAttributes.ry;\n            newData.attributes = newAttributes;\n        }\n    return newData;\n}\n\nfunction translatePointsAttribute(pointsString, x, y) {\n    var pointStrings = pointsString.split(' ');\n    var points = pointStrings.map(function (p) {\n        return p.split(',');\n    });\n    var points = pointStrings.map(function (p) {\n        return [roundTo4Decimals(+x + +p.split(',')[0]), roundTo4Decimals(+y + +p.split(',')[1])];\n    });\n    var pointStrings = points.map(function (p) {\n        return p.join(',');\n    });\n    var pointsString = pointStrings.join(' ');\n    pointsString = pointsString.replace(/-0\\./g, '-.').replace(/ 0\\./g, ' .');\n    return pointsString;\n}\n\nfunction translateDAttribute(d, x, y) {\n    var pointStrings = d.split(/[A-Z ]/);\n    pointStrings.shift();\n    var commands = d.split(/[^[A-Z ]+/);\n    var points = pointStrings.map(function (p) {\n        return p.split(',');\n    });\n    var points = pointStrings.map(function (p) {\n        return [roundTo4Decimals(+x + +p.split(',')[0]), roundTo4Decimals(+y + +p.split(',')[1])];\n    });\n    var pointStrings = points.map(function (p) {\n        return p.join(',');\n    });\n    d = commands.reduce(function (arr, v, i) {\n        return arr.concat(v, pointStrings[i]);\n    }, []).join('');\n    d = d.replace(/-0\\./g, '-.').replace(/ 0\\./g, ' .');\n    return d;\n}\n\nfunction initViz() {\n    // force JIT compilation of Viz.js\n    if (this._worker == null) {\n        Viz(\"\");\n        this._dispatch.call(\"initEnd\", this);\n    } else {\n        var vizURL = this._vizURL;\n        var graphvizInstance = this;\n        this._worker.onmessage = function (event$$1) {\n            graphvizInstance._dispatch.call(\"initEnd\", this);\n        };\n        if (!vizURL.match(/^https?:\\/\\/|^\\/\\//i)) {\n            // Local URL. Prepend with local domain to be usable in web worker\n            vizURL = new window.URL(vizURL, document.location.href).href;\n        }\n        this._worker.postMessage({ dot: \"\", vizURL: vizURL });\n    }\n}\n\nvar dot = function (src, callback) {\n\n    var graphvizInstance = this;\n    var worker = this._worker;\n    var engine = this._options.engine;\n    var images = this._images;\n    var totalMemory = this._options.totalMemory;\n    var keyMode = this._options.keyMode;\n    var tweenPaths = this._options.tweenPaths;\n    var tweenShapes = this._options.tweenShapes;\n    if (typeof this._options.tweenPrecision == 'string' && this._options.tweenPrecision.includes('%')) {\n        var tweenPrecision = +this._options.tweenPrecision.split('%')[0] / 100;\n        var tweenPrecisionIsRelative = this._options.tweenPrecision.includes('%');\n    } else {\n        var tweenPrecision = this._options.tweenPrecision;\n        var tweenPrecisionIsRelative = false;\n    }\n    var growEnteringEdges = this._options.growEnteringEdges;\n    var dictionary = {};\n    var prevDictionary = this._dictionary || {};\n    var nodeDictionary = {};\n    var prevNodeDictionary = this._nodeDictionary || {};\n\n    function setKey(datum, index) {\n        var tag = datum.tag;\n        if (keyMode == 'index') {\n            datum.key = index;\n        } else if (tag[0] != '#') {\n            if (keyMode == 'id') {\n                datum.key = datum.attributes.id;\n            } else if (keyMode == 'title') {\n                var title = datum.children.find(function (childData) {\n                    return childData.tag == 'title';\n                });\n                if (title) {\n                    if (title.children.length > 0) {\n                        datum.key = title.children[0].text;\n                    } else {\n                        datum.key = '';\n                    }\n                }\n            }\n        }\n        if (datum.key == null) {\n            if (tweenShapes) {\n                if (tag == 'ellipse' || tag == 'polygon') {\n                    tag = 'path';\n                }\n            }\n            datum.key = tag + '-' + index;\n        }\n    }\n\n    function setId(datum, parentData) {\n        var id = (parentData ? parentData.id + '.' : '') + datum.key;\n        datum.id = id;\n    }\n\n    function addToDictionary(datum) {\n        dictionary[datum.id] = datum;\n    }\n\n    function calculateAlternativeShapeData(datum, prevDatum) {\n        if (tweenShapes && datum.id in prevDictionary) {\n            if ((prevDatum.tag == 'polygon' || prevDatum.tag == 'ellipse' || prevDatum.tag == 'path') && (prevDatum.tag != datum.tag || datum.tag == 'polygon')) {\n                if (prevDatum.tag != 'path') {\n                    datum.alternativeOld = convertToPathData(prevDatum, datum);\n                }\n                if (datum.tag != 'path') {\n                    datum.alternativeNew = convertToPathData(datum, prevDatum);\n                }\n            }\n        }\n    }\n\n    function calculatePathTweenPoints(datum, prevDatum) {\n        if (tweenPaths && prevDatum && (prevDatum.tag == 'path' || datum.alternativeOld && datum.alternativeOld.tag == 'path')) {\n            var attribute_d = (datum.alternativeNew || datum).attributes.d;\n            if (datum.alternativeOld) {\n                var oldNode = createElementWithAttributes(datum.alternativeOld);\n            } else {\n                var oldNode = createElementWithAttributes(prevDatum);\n            }\n            (datum.alternativeOld || (datum.alternativeOld = {})).points = pathTweenPoints(oldNode, attribute_d, tweenPrecision, tweenPrecisionIsRelative);\n        }\n    }\n\n    function postProcessDataPass1Local(datum) {\n        var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        var parentData = arguments[2];\n\n        setKey(datum, index);\n        setId(datum, parentData);\n        var id = datum.id;\n        var prevDatum = prevDictionary[id];\n        addToDictionary(datum);\n        calculateAlternativeShapeData(datum, prevDatum);\n        calculatePathTweenPoints(datum, prevDatum);\n        var childTagIndexes = {};\n        datum.children.forEach(function (childData) {\n            var childTag = childData.tag;\n            if (childTag == 'ellipse' || childTag == 'polygon') {\n                childTag = 'path';\n            }\n            if (childTagIndexes[childTag] == null) {\n                childTagIndexes[childTag] = 0;\n            }\n            var childIndex = childTagIndexes[childTag]++;\n            postProcessDataPass1Local(childData, childIndex, datum);\n        });\n    }\n\n    function addToNodeDictionary(datum) {\n        var tag = datum.tag;\n        if (growEnteringEdges && datum.parent) {\n            if (datum.parent.attributes.class == 'node') {\n                if (tag == 'title') {\n                    if (datum.children.length > 0) {\n                        var child = datum.children[0];\n                        var nodeId = child.text;\n                    } else {\n                        var nodeId = '';\n                    }\n                    nodeDictionary[nodeId] = datum.parent;\n                }\n            }\n        }\n    }\n\n    function extractGrowingEdgesData(datum) {\n        var id = datum.id;\n        var tag = datum.tag;\n        var prevDatum = prevDictionary[id];\n        if (growEnteringEdges && !prevDatum && datum.parent) {\n            if (isEdgeElement(datum)) {\n                if (tag == 'path' || tag == 'polygon') {\n                    if (tag == 'polygon') {\n                        var path$$1 = datum.parent.children.find(function (e) {\n                            return e.tag == 'path';\n                        });\n                        datum.totalLength = path$$1.totalLength;\n                    }\n                    var title = getEdgeTitle(datum);\n                    var child = title.children[0];\n                    var nodeIds = child.text.split('->');\n                    if (nodeIds.length != 2) {\n                        nodeIds = child.text.split('--');\n                    }\n                    var startNodeId = nodeIds[0];\n                    var startNode = nodeDictionary[startNodeId];\n                    var prevStartNode = prevNodeDictionary[startNodeId];\n                    if (prevStartNode) {\n                        var i = startNode.children.findIndex(function (element, index) {\n                            return element.tag == 'g';\n                        });\n                        if (i >= 0) {\n                            var j = startNode.children[i].children.findIndex(function (element, index) {\n                                return element.tag == 'a';\n                            });\n                            startNode = startNode.children[i].children[j];\n                        }\n                        var i = prevStartNode.children.findIndex(function (element, index) {\n                            return element.tag == 'g';\n                        });\n                        if (i >= 0) {\n                            var j = prevStartNode.children[i].children.findIndex(function (element, index) {\n                                return element.tag == 'a';\n                            });\n                            prevStartNode = prevStartNode.children[i].children[j];\n                        }\n                        var startShapes = startNode.children;\n                        for (var i = 0; i < startShapes.length; i++) {\n                            if (startShapes[i].tag == 'polygon' || startShapes[i].tag == 'ellipse' || startShapes[i].tag == 'path' || startShapes[i].tag == 'text') {\n                                var startShape = startShapes[i];\n                                break;\n                            }\n                        }\n                        var prevStartShapes = prevStartNode.children;\n                        for (var i = 0; i < prevStartShapes.length; i++) {\n                            if (prevStartShapes[i].tag == 'polygon' || prevStartShapes[i].tag == 'ellipse' || prevStartShapes[i].tag == 'path' || prevStartShapes[i].tag == 'text') {\n                                var prevStartShape = prevStartShapes[i];\n                                break;\n                            }\n                        }\n                        if (prevStartShape && startShape) {\n                            datum.offset = {\n                                x: prevStartShape.center.x - startShape.center.x,\n                                y: prevStartShape.center.y - startShape.center.y\n                            };\n                        } else {\n                            datum.offset = { x: 0, y: 0 };\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    function postProcessDataPass2Global(datum) {\n        addToNodeDictionary(datum);\n        extractGrowingEdgesData(datum);\n        datum.children.forEach(function (childData) {\n            postProcessDataPass2Global(childData);\n        });\n    }\n\n    this._dispatch.call(\"start\", this);\n    this._busy = true;\n    this._dispatch.call(\"layoutStart\", this);\n    var vizOptions = {\n        format: \"svg\",\n        engine: engine,\n        images: images,\n        totalMemory: totalMemory\n    };\n    if (this._worker) {\n        worker.postMessage({\n            dot: src,\n            options: vizOptions\n        });\n\n        worker.onmessage = function (event$$1) {\n            switch (event$$1.data.type) {\n                case \"done\":\n                    return layoutDone.call(graphvizInstance, event$$1.data.svg);\n                case \"error\":\n                    if (graphvizInstance._onerror) {\n                        graphvizInstance._onerror(event$$1.data.error);\n                    } else {\n                        throw event$$1.data.error;\n                    }\n                    break;\n            }\n        };\n    } else {\n        try {\n            var svgDoc = Viz(src, vizOptions);\n        } catch (error) {\n            if (graphvizInstance._onerror) {\n                graphvizInstance._onerror(error.message);\n                return this;\n            } else {\n                throw error.message;\n            }\n        }\n        layoutDone.call(this, svgDoc);\n    }\n\n    function layoutDone(svgDoc) {\n        this._dispatch.call(\"layoutEnd\", this);\n\n        var newDoc = d3.select(document.createDocumentFragment()).append('div');\n\n        var parser = new window.DOMParser();\n        var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n\n        newDoc.append(function () {\n            return doc.documentElement;\n        });\n\n        var newSvg = newDoc.select('svg');\n\n        var data$$1 = extractAllElementsData(newSvg);\n        this._dispatch.call('dataExtractEnd', this);\n        postProcessDataPass1Local(data$$1);\n        this._dispatch.call('dataProcessPass1End', this);\n        postProcessDataPass2Global(data$$1);\n        this._dispatch.call('dataProcessPass2End', this);\n        this._data = data$$1;\n        this._dictionary = dictionary;\n        this._nodeDictionary = nodeDictionary;\n\n        this._extractData = function (element, childIndex, parentData) {\n            var data$$1 = extractAllElementsData(element);\n            postProcessDataPass1Local(data$$1, childIndex, parentData);\n            postProcessDataPass2Global(data$$1);\n            return data$$1;\n        };\n        this._busy = false;\n        this._dispatch.call('dataProcessEnd', this);\n        if (callback) {\n            callback.call(this);\n        }\n        if (this._queue.length > 0) {\n            var job = this._queue.shift();\n            job.call(this);\n        }\n    }\n\n    return this;\n};\n\nvar renderDot = function (src, callback) {\n\n    var graphvizInstance = this;\n\n    this.dot(src, render);\n\n    function render() {\n        graphvizInstance.render(callback);\n    }\n\n    return this;\n};\n\nvar transition$1 = function (name) {\n\n    if (name instanceof Function) {\n        this._transitionFactory = name;\n    } else {\n        this._transition = d3Transition.transition(name);\n    }\n\n    return this;\n};\n\nfunction active$1(name) {\n\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    if (svg.size() != 0) {\n        return d3Transition.active(svg.node(), name);\n    } else {\n        return null;\n    }\n}\n\nvar options = function (options) {\n\n    if (typeof options == 'undefined') {\n        return Object.assign({}, this._options);\n    } else {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = Object.keys(options)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var option = _step.value;\n\n                this._options[option] = options[option];\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        return this;\n    }\n};\n\nvar width = function (width) {\n\n    this._options.width = width;\n\n    return this;\n};\n\nvar height = function (height) {\n\n    this._options.height = height;\n\n    return this;\n};\n\nvar scale = function (scale) {\n\n    this._options.scale = scale;\n\n    return this;\n};\n\nvar fit = function (fit) {\n\n    this._options.fit = fit;\n\n    return this;\n};\n\nvar attributer = function (callback) {\n\n    this._attributer = callback;\n\n    return this;\n};\n\nvar engine = function (engine) {\n\n    this._options.engine = engine;\n\n    return this;\n};\n\nvar images = function (path$$1, width, height) {\n\n    this._images.push({ path: path$$1, width: width, height: height });\n\n    return this;\n};\n\nvar totalMemory = function (size) {\n\n    this._options.totalMemory = size;\n\n    return this;\n};\n\nvar keyMode = function (keyMode) {\n\n    if (!this._keyModes.has(keyMode)) {\n        throw Error('Illegal keyMode: ' + keyMode);\n    }\n    if (keyMode != this._options.keyMode && this._data != null) {\n        throw Error('Too late to change keyMode');\n    }\n    this._options.keyMode = keyMode;\n\n    return this;\n};\n\nvar fade = function (enable) {\n\n    this._options.fade = enable;\n\n    return this;\n};\n\nvar tweenPaths = function (enable) {\n\n    this._options.tweenPaths = enable;\n\n    return this;\n};\n\nvar tweenShapes = function (enable) {\n\n    this._options.tweenShapes = enable;\n    if (enable) {\n        this._options.tweenPaths = true;\n    }\n\n    return this;\n};\n\nvar convertEqualSidedPolygons = function (enable) {\n\n    this._options.convertEqualSidedPolygons = enable;\n\n    return this;\n};\n\nvar tweenPrecision = function (precision) {\n\n    this._options.tweenPrecision = precision;\n\n    return this;\n};\n\nvar growEnteringEdges = function (enable) {\n\n    this._options.growEnteringEdges = enable;\n\n    return this;\n};\n\nvar on = function (typenames, callback) {\n\n    this._dispatch.on(typenames, callback);\n\n    return this;\n};\n\nvar onerror = function (callback) {\n\n    this._onerror = callback;\n\n    return this;\n};\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar logEvents = function (enable) {\n    var _this = this;\n\n    var t0 = Date.now();\n    var times = {};\n    var eventTypes = this._eventTypes;\n    var maxEventTypeLength = Math.max.apply(Math, toConsumableArray(eventTypes.map(function (eventType) {\n        return eventType.length;\n    })));\n\n    var _loop = function _loop(i) {\n        var eventType = eventTypes[i];\n        times[eventType] = [];\n        graphvizInstance = _this;\n\n        _this.on(eventType + '.log', enable ? function () {\n            var t = Date.now();\n            var seqNo = times[eventType].length;\n            times[eventType].push(t);\n            var string = '';\n            string += 'Event ';\n            string += d3Format.format(' >2')(i) + ' ';\n            string += eventType + ' '.repeat(maxEventTypeLength - eventType.length);\n            string += d3Format.format(' >5')(t - t0) + ' ';\n            if (eventType != 'initEnd') {\n                string += d3Format.format(' >5')(t - times['start'][seqNo]);\n            }\n            if (eventType == 'dataProcessEnd') {\n                string += ' prepare                 ' + d3Format.format(' >5')(t - times['layoutEnd'][seqNo]);\n            }\n            if (eventType == 'renderEnd' && graphvizInstance._transition) {\n                string += ' transition start margin ' + d3Format.format(' >5')(graphvizInstance._transition.delay() - (t - times['renderStart'][seqNo]));\n                expectedDelay = graphvizInstance._transition.delay();\n                expectedDuration = graphvizInstance._transition.duration();\n            }\n            if (eventType == 'transitionStart') {\n                var actualDelay = t - times['renderStart'][seqNo];\n                string += ' transition delay        ' + d3Format.format(' >5')(t - times['renderStart'][seqNo]);\n                string += ' expected ' + d3Format.format(' >5')(expectedDelay);\n                string += ' diff ' + d3Format.format(' >5')(actualDelay - expectedDelay);\n            }\n            if (eventType == 'transitionEnd') {\n                var actualDuration = t - times['transitionStart'][seqNo];\n                string += ' transition duration     ' + d3Format.format(' >5')(actualDuration);\n                string += ' expected ' + d3Format.format(' >5')(expectedDuration);\n                string += ' diff ' + d3Format.format(' >5')(actualDuration - expectedDuration);\n            }\n            console.log(string);\n            t0 = t;\n        } : null);\n    };\n\n    for (var i in eventTypes) {\n        var graphvizInstance;\n        var expectedDelay;\n        var expectedDuration;\n\n        _loop(i);\n    }\n    return this;\n};\n\nfunction rotate(x, y, cosA, sinA) {\n    // (x + j * y) * (cosA + j * sinA) = x * cosA - y * sinA + j * (x * sinA + y * cosA)\n    y = -y;\n    sinA = -sinA;\n    var _ref = [x * cosA - y * sinA, x * sinA + y * cosA];\n    x = _ref[0];\n    y = _ref[1];\n\n    y = -y;\n    return [x, y];\n}\n\nfunction drawEdge(x1, y1, x2, y2, attributes) {\n    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n    attributes = Object.assign({}, attributes);\n    if (attributes.style && attributes.style.includes('invis')) {\n        var newEdge = d3.select(null);\n    } else {\n        var root = this._selection;\n        var svg = root.selectWithoutDataPropagation(\"svg\");\n        var graph0 = svg.selectWithoutDataPropagation(\"g\");\n        var newEdge0 = createEdge(attributes);\n        var edgeData = extractAllElementsData(newEdge0);\n        var newEdge = graph0.append('g').data([edgeData]);\n        attributeElement.call(newEdge.node(), edgeData);\n        _updateEdge(newEdge, x1, y1, x2, y2, attributes, options);\n    }\n    this._drawnEdge = {\n        g: newEdge,\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        attributes: attributes\n    };\n\n    return this;\n}\n\nfunction updateDrawnEdge(x1, y1, x2, y2) {\n    var attributes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n\n    if (!this._drawnEdge) {\n        throw Error('No edge has been drawn');\n    }\n    var edge = this._drawnEdge.g;\n    attributes = Object.assign(this._drawnEdge.attributes, attributes);\n    this._drawnEdge.x1 = x1;\n    this._drawnEdge.y1 = y1;\n    this._drawnEdge.x2 = x2;\n    this._drawnEdge.y2 = y2;\n    if (edge.empty() && !(attributes.style && attributes.style.includes('invis'))) {\n        var root = this._selection;\n        var svg = root.selectWithoutDataPropagation(\"svg\");\n        var graph0 = svg.selectWithoutDataPropagation(\"g\");\n        var edge = graph0.append('g');\n        this._drawnEdge.g = edge;\n    }\n    if (!edge.empty()) {\n        _updateEdge(edge, x1, y1, x2, y2, attributes, options);\n    }\n\n    return this;\n}\n\nfunction _updateEdge(edge, x1, y1, x2, y2, attributes, options) {\n\n    var newEdge = createEdge(attributes);\n    var edgeData = extractAllElementsData(newEdge);\n    edge.data([edgeData]);\n    attributeElement.call(edge.node(), edgeData);\n    _moveEdge(edge, x1, y1, x2, y2, attributes, options);\n}\n\nfunction _moveEdge(edge, x1, y1, x2, y2, attributes, options) {\n\n    var shortening = options.shortening || 0;\n    var arrowHeadLength = 10;\n    var arrowHeadWidth = 7;\n    var margin = 0.174;\n\n    var arrowHeadPoints = [[0, -arrowHeadWidth / 2], [arrowHeadLength, 0], [0, arrowHeadWidth / 2], [0, -arrowHeadWidth / 2]];\n\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var length = Math.sqrt(dx * dx + dy * dy);\n    if (length == 0) {\n        var cosA = 1;\n        var sinA = 0;\n    } else {\n        var cosA = dx / length;\n        var sinA = dy / length;\n    }\n    x2 = x1 + (length - shortening - arrowHeadLength - margin) * cosA;\n    y2 = y1 + (length - shortening - arrowHeadLength - margin) * sinA;\n\n    if (attributes.URL || attributes.tooltip) {\n        var a = edge.selectWithoutDataPropagation(\"g\").selectWithoutDataPropagation(\"a\");\n        var line = a.selectWithoutDataPropagation(\"path\");\n        var arrowHead = a.selectWithoutDataPropagation(\"polygon\");\n    } else {\n        var line = edge.selectWithoutDataPropagation(\"path\");\n        var arrowHead = edge.selectWithoutDataPropagation(\"polygon\");\n    }\n\n    var path1 = d3Path.path();\n    path1.moveTo(x1, y1);\n    path1.lineTo(x2, y2);\n\n    line.attr(\"d\", path1);\n\n    x2 = x1 + (length - shortening - arrowHeadLength) * cosA;\n    y2 = y1 + (length - shortening - arrowHeadLength) * sinA;\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n        var point = arrowHeadPoints[i];\n        arrowHeadPoints[i] = rotate(point[0], point[1], cosA, sinA);\n    }\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n        var point = arrowHeadPoints[i];\n        arrowHeadPoints[i] = [x2 + point[0], y2 + point[1]];\n    }\n    var allPoints = [];\n    for (var i = 0; i < arrowHeadPoints.length; i++) {\n        var point = arrowHeadPoints[i];\n        allPoints.push(point.join(','));\n    }\n    var pointsAttr = allPoints.join(' ');\n\n    arrowHead.attr(\"points\", pointsAttr);\n\n    return this;\n}\n\nfunction moveDrawnEdgeEndPoint(x2, y2) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\n    if (!this._drawnEdge) {\n        throw Error('No edge has been drawn');\n    }\n    var edge = this._drawnEdge.g;\n    var x1 = this._drawnEdge.x1;\n    var y1 = this._drawnEdge.y1;\n    var attributes = this._drawnEdge.attributes;\n\n    this._drawnEdge.x2 = x2;\n    this._drawnEdge.y2 = y2;\n    _moveEdge(edge, x1, y1, x2, y2, attributes, options);\n\n    return this;\n}\n\nfunction removeDrawnEdge() {\n\n    if (!this._drawnEdge) {\n        return this;\n    }\n\n    var edge = this._drawnEdge.g;\n\n    edge.remove();\n\n    this._drawnEdge = null;\n\n    return this;\n}\n\nfunction insertDrawnEdge(name) {\n\n    if (!this._drawnEdge) {\n        throw Error('No edge has been drawn');\n    }\n\n    var edge = this._drawnEdge.g;\n    if (edge.empty()) {\n        return this;\n    }\n    var attributes = this._drawnEdge.attributes;\n\n    var title = edge.selectWithoutDataPropagation(\"title\");\n    title.text(name);\n\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    var graph0 = svg.selectWithoutDataPropagation(\"g\");\n    var graph0Datum = graph0.datum();\n    var edgeData = this._extractData(edge, graph0Datum.children.length, graph0.datum());\n    graph0Datum.children.push(edgeData);\n\n    insertAllElementsData(edge, edgeData);\n\n    this._drawnEdge = null;\n\n    return this;\n}\n\nfunction drawnEdgeSelection() {\n\n    if (this._drawnEdge) {\n        return this._drawnEdge.g;\n    } else {\n        return d3.select(null);\n    }\n}\n\nfunction createEdge(attributes) {\n    var attributesString = '';\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = Object.keys(attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var name = _step.value;\n\n            if (attributes[name] != null) {\n                attributesString += ' \"' + name + '\"=\"' + attributes[name] + '\"';\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    var dotSrc = 'digraph {a -> b [' + attributesString + ']}';\n    var svgDoc = Viz(dotSrc, { format: 'svg' });\n    var parser = new window.DOMParser();\n    var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n    var newDoc = d3.select(document.createDocumentFragment()).append(function () {\n        return doc.documentElement;\n    });\n    var edge = newDoc.select('.edge');\n\n    return edge;\n}\n\nfunction drawNode(x, y, nodeId) {\n    var attributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    attributes = Object.assign({}, attributes);\n    if (attributes.style && attributes.style.includes('invis')) {\n        var newNode = d3.select(null);\n    } else {\n        var root = this._selection;\n        var svg = root.selectWithoutDataPropagation(\"svg\");\n        var graph0 = svg.selectWithoutDataPropagation(\"g\");\n        var newNode0 = createNode(nodeId, attributes);\n        var nodeData = extractAllElementsData(newNode0);\n        var newNode = graph0.append('g').data([nodeData]);\n        attributeElement.call(newNode.node(), nodeData);\n        _updateNode(newNode, x, y, nodeId, attributes, options);\n    }\n    this._drawnNode = {\n        g: newNode,\n        nodeId: nodeId,\n        x: x,\n        y: y,\n        attributes: attributes\n    };\n\n    return this;\n}\n\nfunction updateDrawnNode(x, y, nodeId) {\n    var attributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    if (!this._drawnNode) {\n        throw Error('No node has been drawn');\n    }\n\n    var node = this._drawnNode.g;\n    if (nodeId == null) {\n        nodeId = this._drawnNode.nodeId;\n    }\n    attributes = Object.assign(this._drawnNode.attributes, attributes);\n    this._drawnNode.nodeId = nodeId;\n    this._drawnNode.x = x;\n    this._drawnNode.y = y;\n    if (node.empty() && !(attributes.style && attributes.style.includes('invis'))) {\n        var root = this._selection;\n        var svg = root.selectWithoutDataPropagation(\"svg\");\n        var graph0 = svg.selectWithoutDataPropagation(\"g\");\n        var node = graph0.append('g');\n        this._drawnNode.g = node;\n    }\n    if (!node.empty()) {\n        _updateNode(node, x, y, nodeId, attributes, options);\n    }\n\n    return this;\n}\n\nfunction _updateNode(node, x, y, nodeId, attributes, options) {\n\n    var newNode = createNode(nodeId, attributes);\n    var nodeData = extractAllElementsData(newNode);\n    node.data([nodeData]);\n    attributeElement.call(node.node(), nodeData);\n    _moveNode(node, x, y, attributes, options);\n\n    return this;\n}\n\nfunction _moveNode(node, x, y, attributes, options) {\n    if (attributes.URL || attributes.tooltip) {\n        var subParent = node.selectWithoutDataPropagation(\"g\").selectWithoutDataPropagation(\"a\");\n    } else {\n        var subParent = node;\n    }\n    var svgElements = subParent.selectAll('ellipse,polygon,path,polyline');\n    var text = node.selectWithoutDataPropagation(\"text\");\n\n    if (svgElements.size() != 0) {\n        var bbox = svgElements.node().getBBox();\n        bbox.cx = bbox.x + bbox.width / 2;\n        bbox.cy = bbox.y + bbox.height / 2;\n    } else if (text.size() != 0) {\n        bbox = {\n            x: +text.attr('x'),\n            y: +text.attr('y'),\n            width: 0,\n            height: 0,\n            cx: +text.attr('x'),\n            cy: +text.attr('y')\n        };\n    }\n    svgElements.each(function (data, index) {\n        var svgElement = d3.select(this);\n        if (svgElement.attr(\"cx\")) {\n            svgElement.attr(\"cx\", roundTo4Decimals(x)).attr(\"cy\", roundTo4Decimals(y));\n        } else if (svgElement.attr(\"points\")) {\n            var pointsString = svgElement.attr('points').trim();\n            svgElement.attr(\"points\", translatePointsAttribute(pointsString, x - bbox.cx, y - bbox.cy));\n        } else {\n            var d = svgElement.attr('d');\n            svgElement.attr(\"d\", translateDAttribute(d, x - bbox.cx, y - bbox.cy));\n        }\n    });\n\n    if (text.size() != 0) {\n        text.attr(\"x\", roundTo4Decimals(+text.attr(\"x\") + x - bbox.cx)).attr(\"y\", roundTo4Decimals(+text.attr(\"y\") + y - bbox.cy));\n    }\n    return this;\n}\n\nfunction moveDrawnNode(x, y) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n\n    if (!this._drawnNode) {\n        throw Error('No node has been drawn');\n    }\n    var node = this._drawnNode.g;\n    var attributes = this._drawnNode.attributes;\n\n    this._drawnNode.x = x;\n    this._drawnNode.y = y;\n\n    if (!node.empty()) {\n        _moveNode(node, x, y, attributes, options);\n    }\n\n    return this;\n}\n\nfunction removeDrawnNode() {\n\n    if (!this._drawnNode) {\n        return this;\n    }\n\n    var node = this._drawnNode.g;\n\n    if (!node.empty()) {\n        node.remove();\n    }\n\n    this._drawnNode = null;\n\n    return this;\n}\n\nfunction insertDrawnNode(nodeId) {\n\n    if (!this._drawnNode) {\n        throw Error('No node has been drawn');\n    }\n\n    if (nodeId == null) {\n        nodeId = this._drawnNode.nodeId;\n    }\n    var node = this._drawnNode.g;\n    if (node.empty()) {\n        return this;\n    }\n    var attributes = this._drawnNode.attributes;\n\n    var title = node.selectWithoutDataPropagation(\"title\");\n    title.text(nodeId);\n    if (attributes.URL || attributes.tooltip) {\n        var ga = node.selectWithoutDataPropagation(\"g\");\n        var a = ga.selectWithoutDataPropagation(\"a\");\n        var svgElement = a.selectWithoutDataPropagation('ellipse,polygon,path,polyline');\n        var text = a.selectWithoutDataPropagation('text');\n    } else {\n        var svgElement = node.selectWithoutDataPropagation('ellipse,polygon,path,polyline');\n        var text = node.selectWithoutDataPropagation('text');\n    }\n    text.text(attributes.label || nodeId);\n\n    var root = this._selection;\n    var svg = root.selectWithoutDataPropagation(\"svg\");\n    var graph0 = svg.selectWithoutDataPropagation(\"g\");\n    var graph0Datum = graph0.datum();\n    var nodeData = this._extractData(node, graph0Datum.children.length, graph0.datum());\n    graph0Datum.children.push(nodeData);\n\n    insertAllElementsData(node, nodeData);\n\n    this._drawnNode = null;\n\n    return this;\n}\n\nfunction drawnNodeSelection() {\n\n    if (this._drawnNode) {\n        return this._drawnNode.g;\n    } else {\n        return d3.select(null);\n    }\n}\n\nfunction createNode(nodeId, attributes) {\n    var attributesString = '';\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = Object.keys(attributes)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var name = _step.value;\n\n            if (attributes[name] != null) {\n                attributesString += ' \"' + name + '\"=\"' + attributes[name] + '\"';\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    var dotSrc = 'graph {\"' + nodeId + '\" [' + attributesString + ']}';\n    var svgDoc = Viz(dotSrc, { format: 'svg' });\n    var parser = new window.DOMParser();\n    var doc = parser.parseFromString(svgDoc, \"image/svg+xml\");\n    var newDoc = d3.select(document.createDocumentFragment()).append(function () {\n        return doc.documentElement;\n    });\n    var node = newDoc.select('.node');\n\n    return node;\n}\n\nvar _graphviz$prototype;\n\nfunction Graphviz(selection$$1, options$$1) {\n    this._options = {\n        useWorker: true,\n        engine: 'dot',\n        totalMemory: undefined,\n        keyMode: 'title',\n        fade: true,\n        tweenPaths: true,\n        tweenShapes: true,\n        convertEqualSidedPolygons: true,\n        tweenPrecision: 1,\n        growEnteringEdges: true,\n        zoom: true,\n        zoomScaleExtent: [0.1, 10],\n        zoomTranslateExtent: [[-Infinity, -Infinity], [+Infinity, +Infinity]],\n        width: null,\n        height: null,\n        scale: 1,\n        fit: false\n    };\n    if (options$$1 instanceof Object) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = Object.keys(options$$1)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var option = _step.value;\n\n                this._options[option] = options$$1[option];\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    } else if (typeof options$$1 == 'boolean') {\n        this._options.useWorker = options$$1;\n    }\n    var useWorker = this._options.useWorker;\n    if (typeof Worker == 'undefined') {\n        useWorker = false;\n    }\n    if (useWorker) {\n        var scripts = d3.selectAll('script');\n        var vizScript = scripts.filter(function () {\n            return d3.select(this).attr('type') == 'javascript/worker' || d3.select(this).attr('src') && d3.select(this).attr('src').match(/.*\\/viz.js$/);\n        });\n        if (vizScript.size() == 0) {\n            console.warn('No script tag of type \"javascript/worker\" was found and \"useWorker\" is true. Not using web worker.');\n            useWorker = false;\n        } else {\n            this._vizURL = vizScript.attr('src');\n            if (!this._vizURL) {\n                console.warn('No \"src\" attribute of was found on the \"javascript/worker\" script tag and \"useWorker\" is true. Not using web worker.');\n                useWorker = false;\n            }\n        }\n    }\n    if (useWorker) {\n        var js = \"\\n            onmessage = function(event) {\\n                if (event.data.vizURL) {\\n                    importScripts(event.data.vizURL);\\n                }\\n                try {\\n                    var svg = Viz(event.data.dot, event.data.options);\\n                }\\n                catch(error) {\\n                    postMessage({\\n                        type: \\\"error\\\",\\n                        error: error.message,\\n                    });\\n                    return;\\n                }\\n                if (svg) {\\n                    postMessage({\\n                        type: \\\"done\\\",\\n                        svg: svg,\\n                    });\\n                } else {\\n                    postMessage({\\n                        type: \\\"skip\\\",\\n                    });\\n                }\\n            }\\n        \";\n        var blob = new Blob([js]);\n        var blobURL = window.URL.createObjectURL(blob);\n        this._worker = new Worker(blobURL);\n    }\n    this._selection = selection$$1;\n    this._active = false;\n    this._busy = false;\n    this._jobs = [];\n    this._queue = [];\n    this._keyModes = new Set(['title', 'id', 'tag-index', 'index']);\n    this._images = [];\n    this._translation = undefined;\n    this._scale = undefined;\n    this._eventTypes = ['initEnd', 'start', 'layoutStart', 'layoutEnd', 'dataExtractEnd', 'dataProcessPass1End', 'dataProcessPass2End', 'dataProcessEnd', 'renderStart', 'renderEnd', 'transitionStart', 'transitionEnd', 'restoreEnd', 'end'];\n    this._dispatch = d3Dispatch.dispatch.apply(undefined, toConsumableArray(this._eventTypes));\n    initViz.call(this);\n    selection$$1.node().__graphviz__ = this;\n}\n\nfunction graphviz(selector, options$$1) {\n    var g = d3.select(selector).graphviz(options$$1);\n    return g;\n}\n\nGraphviz.prototype = graphviz.prototype = (_graphviz$prototype = {\n    constructor: Graphviz,\n    engine: engine,\n    addImage: images,\n    totalMemory: totalMemory,\n    keyMode: keyMode,\n    fade: fade,\n    tweenPaths: tweenPaths,\n    tweenShapes: tweenShapes,\n    convertEqualSidedPolygons: convertEqualSidedPolygons,\n    tweenPrecision: tweenPrecision,\n    growEnteringEdges: growEnteringEdges,\n    zoom: zoom$1,\n    resetZoom: resetZoom,\n    zoomBehavior: zoomBehavior,\n    zoomSelection: zoomSelection,\n    zoomScaleExtent: zoomScaleExtent,\n    zoomTranslateExtent: zoomTranslateExtent,\n    render: render,\n    dot: dot,\n    data: data,\n    renderDot: renderDot,\n    transition: transition$1,\n    active: active$1,\n    options: options,\n    width: width,\n    height: height,\n    scale: scale,\n    fit: fit,\n    attributer: attributer,\n    on: on,\n    onerror: onerror,\n    logEvents: logEvents,\n    drawEdge: drawEdge,\n    updateDrawnEdge: updateDrawnEdge,\n    moveDrawnEdgeEndPoint: moveDrawnEdgeEndPoint,\n    insertDrawnEdge: insertDrawnEdge,\n    removeDrawnEdge: removeDrawnEdge }, defineProperty(_graphviz$prototype, \"removeDrawnEdge\", removeDrawnEdge), defineProperty(_graphviz$prototype, \"drawnEdgeSelection\", drawnEdgeSelection), defineProperty(_graphviz$prototype, \"drawnEdgeSelection\", drawnEdgeSelection), defineProperty(_graphviz$prototype, \"drawNode\", drawNode), defineProperty(_graphviz$prototype, \"updateDrawnNode\", updateDrawnNode), defineProperty(_graphviz$prototype, \"moveDrawnNode\", moveDrawnNode), defineProperty(_graphviz$prototype, \"insertDrawnNode\", insertDrawnNode), defineProperty(_graphviz$prototype, \"removeDrawnNode\", removeDrawnNode), defineProperty(_graphviz$prototype, \"removeDrawnNode\", removeDrawnNode), defineProperty(_graphviz$prototype, \"drawnNodeSelection\", drawnNodeSelection), defineProperty(_graphviz$prototype, \"drawnNodeSelection\", drawnNodeSelection), _graphviz$prototype);\n\nvar selection_graphviz = function (options) {\n\n    var g = this.node().__graphviz__;\n    if (g) {\n        g.options(options);\n        g._dispatch.call(\"initEnd\", this);\n    } else {\n        g = new Graphviz(this, options);\n    }\n    return g;\n};\n\nvar selection_selectWithoutDataPropagation = function (name) {\n\n    return d3.select(this.size() > 0 ? this.node().querySelector(name) : null);\n};\n\nd3.selection.prototype.graphviz = selection_graphviz;\nd3.selection.prototype.selectWithoutDataPropagation = selection_selectWithoutDataPropagation;\n\nexports.graphviz = graphviz;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}